{
    "sourceFile": "algorithms/maths/onlinejudge/perfection.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1729600428296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729600433866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+\n+namespace algorithms::maths::onlinejudge::perfection\n+{\n+    // https://onlinejudge.org/external/104/10469.pdf\n+    int add(int x, int y) { return  x ^ y; }\n+\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int x, y;\n+        while(std::cin >> x >> y) { printf(\"%d\\n\", add(x, y)); }\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729600447162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,32 +5,14 @@\n \n \n namespace algorithms::maths::onlinejudge::perfection\n {\n-    // https://onlinejudge.org/external/104/10469.pdf\n+    /** https://onlinejudge.org/external/3/382.pdf */\n     int add(int x, int y) { return  x ^ y; }\n \n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int x, y;\n         while(std::cin >> x >> y) { printf(\"%d\\n\", add(x, y)); }\n     }\n-}\n-#include <cassert>\n-#include <optional>\n-#include <iostream>\n-#include <cstdio>\n-\n-\n-namespace algorithms::maths::onlinejudge::carry_bit\n-{\n-    // https://onlinejudge.org/external/104/10469.pdf\n-    int add(int x, int y) { return  x ^ y; }\n-\n-    void submit(std::optional<char*> file)\n-    {\n-        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int x, y;\n-        while(std::cin >> x >> y) { printf(\"%d\\n\", add(x, y)); }\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729600456393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,9 @@\n \n namespace algorithms::maths::onlinejudge::perfection\n {\n     /** https://onlinejudge.org/external/3/382.pdf */\n-    int add(int x, int y) { return  x ^ y; }\n-\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int x, y;\n-        while(std::cin >> x >> y) { printf(\"%d\\n\", add(x, y)); }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729601043020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n \n namespace algorithms::maths::onlinejudge::perfection\n {\n-    /** https://onlinejudge.org/external/3/382.pdf */\n+    /** https://onlinejudge.org/external/3/382.pdf, do trial division */\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n     }\n"
                },
                {
                    "date": 1729601051624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n \n namespace algorithms::maths::onlinejudge::perfection\n {\n-    /** https://onlinejudge.org/external/3/382.pdf, do trial division\n+    /** https://onlinejudge.org/external/3/382.pdf\n      * https://en.wikipedia.org/wiki/Trial_division */\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n"
                },
                {
                    "date": 1729601267743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n enum Perfection { PERFECT, DEFICIENT, ABUNDANT };\n \n     /** https://onlinejudge.org/external/3/382.pdf\n      * do trial division, https://en.wikipedia.org/wiki/Trial_division */\n-    \n+    std::string printPerfection()\n+\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n \n"
                }
            ],
            "date": 1729600428296,
            "name": "Commit-0",
            "content": "#include <cassert>\n#include <optional>\n#include <iostream>\n#include <cstdio>\n\n\nnamespace algorithms::maths::onlinejudge::carry_bit\n{\n    // https://onlinejudge.org/external/104/10469.pdf\n    int add(int x, int y) { return  x ^ y; }\n\n    void submit(std::optional<char*> file)\n    {\n        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n        int x, y;\n        while(std::cin >> x >> y) { printf(\"%d\\n\", add(x, y)); }\n    }\n}"
        }
    ]
}
{
    "sourceFile": "algorithms/maths/onlinejudge/digitCounting.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1729678762487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729678769242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,8 @@\n \n \n namespace algorithms::maths::onlinejudge::digit_counting\n+{\n+\n+\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729678776372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,11 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n \n \n+\n+\n namespace algorithms::maths::onlinejudge::digit_counting\n {\n \n \n"
                },
                {
                    "date": 1729678781822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n #include <cassert>\n #include <optional>\n #include <iostream>\n+#include <vector>\n \n \n-\n-\n namespace algorithms::maths::onlinejudge::digit_counting\n {\n \n \n"
                },
                {
                    "date": 1729678842534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,7 +6,8 @@\n \n namespace algorithms::maths::onlinejudge::digit_counting\n {\n \n+typed\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729678851385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,8 @@\n \n namespace algorithms::maths::onlinejudge::digit_counting\n {\n \n-typed\n+typedef std::vector<int> vi;\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729678863850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n {\n \n typedef std::vector<int> vi;\n \n+ void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n \n \n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729678995079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <vector>\n+\n+\n+namespace algorithms::maths::onlinejudge::digit_counting\n+{\n+\n+typedef std::vector<int> vi;\n+\n+    /** https://onlinejudge.org/external/12/1225.pdf, constraint is that small */\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int tc;\n+        std::cin << tc;\n+        while(--tc >= 0)\n+        {\n+            int num;\n+            std::cin >> num;\n+            vi digit_counter;\n+            count()\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1729678762487,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::maths::onlinejudge::digit_counting\n"
        }
    ]
}
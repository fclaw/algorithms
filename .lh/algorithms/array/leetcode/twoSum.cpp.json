{
    "sourceFile": "algorithms/array/leetcode/twoSum.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 40,
            "patches": [
                {
                    "date": 1725906325696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725906333794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,6 @@\n \n \n-namespace algorithms::array::leetcode::\n\\ No newline at end of file\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906365388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n \n \n namespace algorithms::array::leetcode::two_sum\n {\n-    \n+        vector<int> twoSum(vector<int>& nums, int target) {\n+        \n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906376212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n+#include <vector>\n \n-\n namespace algorithms::array::leetcode::two_sum\n {\n-        vector<int> twoSum(vector<int>& nums, int target) {\n+    vector<int> twoSum(vector<int>& nums, int target) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906384138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,8 @@\n+#include <vector>\n+\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    std::vector<int> twoSum(std::vector<int>& nums, int target) {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906391693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,9 @@\n #include <vector>\n \n namespace algorithms::array::leetcode::two_sum\n {\n-    std::vector<int> twoSum(std::vector<int>& nums, int target) {\n-        \n+    std::vector<int> twoSum(std::vector<int>& nums, int target) \n+    {\n+            \n     }\n-}\n-#include <vector>\n-\n-namespace algorithms::array::leetcode::two_sum\n-{\n-    vector<int> twoSum(vector<int>& nums, int target) {\n-        \n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906400447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n namespace algorithms::array::leetcode::two_sum\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n-            \n+        std::    \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906440422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,9 @@\n+#include <vector>\n+\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    std::vector<int> twoSum(std::vector<int>& nums, int target) \n+    {\n+            \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906448158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,5 @@\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n             \n     }\n-}\n-#include <vector>\n-\n-namespace algorithms::array::leetcode::two_sum\n-{\n-    std::vector<int> twoSum(std::vector<int>& nums, int target) \n-    {\n-        std::    \n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906458831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n #include <vector>\n+#include <unr\n \n namespace algorithms::array::leetcode::two_sum\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n"
                },
                {
                    "date": 1725906473325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n #include <vector>\n-#include <unr\n+#include <unordered_map>\n \n namespace algorithms::array::leetcode::two_sum\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n-            \n+        std::unordered_map<int, int>\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906485829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n namespace algorithms::array::leetcode::two_sum\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n-        std::unordered_map<int, int>\n+        std::unordered_map<int, int> \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906491327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,8 @@\n namespace algorithms::array::leetcode::two_sum\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n-        std::unordered_map<int, int> \n+        std::unordered_map<int, int> map;\n+        for(0)\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906499887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,7 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        for(0)\n+        for(auto x )\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906506237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,10 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        for(auto x )\n+        for(auto n : nums)\n+        {\n+            \n+        }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906512786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(auto n : nums)\n         {\n-            \n+            if\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906519541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(auto n : nums)\n         {\n-            if\n+            if(map.)\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906525289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(auto n : nums)\n         {\n-            if(map.)\n+            if(map.find(n))\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906536555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        for(auto n : nums)\n+        for(int i = 0; i < )\n         {\n-            if(map.find(n))\n+            if(map.find(n) )\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906543293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+#include <vector>\n+#include <unordered_map>\n+\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    std::vector<int> twoSum(std::vector<int>& nums, int target) \n+    {\n+        std::unordered_map<int, int> map;\n+        for(int i = 0; i < nums.size(); i++)\n+        {\n+            if(map.find(n) )\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906549237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,22 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find(n) )\n+            if(map.find(nums[i]) )\n         }\n     }\n-}\n-#include <vector>\n-#include <unordered_map>\n-\n-namespace algorithms::array::leetcode::two_sum\n-{\n-    std::vector<int> twoSum(std::vector<int>& nums, int target) \n-    {\n-        std::unordered_map<int, int> map;\n-        for(int i = 0; i < )\n-        {\n-            if(map.find(n) )\n-        }\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906565676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find(nums[i]) )\n+            if(map.)\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906584981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.)\n+            if(map.find)\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906590511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find)\n+            if(map.find())\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906596603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find())\n+            if(map.find(nums[i]))\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906603153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find(nums[i]))\n+            if(map.find(nums[i]) !=  nums.end())\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906612728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,11 @@\n     {\n         std::unordered_map<int, int> map;\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find(nums[i]) !=  nums.end())\n+            if(map.find(nums[i]) != nums.end())\n+            {\n+                \n+            }\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906636362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,14 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n+        std::\n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != nums.end())\n             {\n-                \n+\n             }\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906641954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        std::\n+        std::vector\n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != nums.end())\n             {\n"
                },
                {
                    "date": 1725906647700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        std::vector\n+        \n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != nums.end())\n             {\n"
                },
                {
                    "date": 1725906656967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != nums.end())\n             {\n-\n             }\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906663694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        \n+        s\n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != nums.end())\n             {\n"
                },
                {
                    "date": 1725906678560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,11 @@\n {\n     std::vector<int> twoSum(std::vector<int>& nums, int target) \n     {\n         std::unordered_map<int, int> map;\n-        s\n         for(int i = 0; i < nums.size(); i++)\n         {\n-            if(map.find(nums[i]) != nums.end())\n+            if(map.find(nums[i]) != map.end())\n             {\n             }\n         }\n     }\n"
                },
                {
                    "date": 1725906684252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n         for(int i = 0; i < nums.size(); i++)\n         {\n             if(map.find(nums[i]) != map.end())\n             {\n+                \n             }\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906689503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+#include <vector>\n+#include <unordered_map>\n+\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    std::vector<int> twoSum(std::vector<int>& nums, int target) \n+    {\n+        std::unordered_map<int, int> map;\n+        for(int i = 0; i < nums.size(); i++)\n+        {\n+            if(map.find(nums[i]) != map.end())\n+            {\n+\n+            }\n+            else \n+        }\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906696405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,8 @@\n             if(map.find(nums[i]) != map.end())\n             {\n \n             }\n-            else \n+            else map\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906704594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,8 @@\n             if(map.find(nums[i]) != map.end())\n             {\n \n             }\n-            else map\n+            else map[]\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906715804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,22 +14,5 @@\n             }\n             else map[]\n         }\n     }\n-}\n-#include <vector>\n-#include <unordered_map>\n-\n-namespace algorithms::array::leetcode::two_sum\n-{\n-    std::vector<int> twoSum(std::vector<int>& nums, int target) \n-    {\n-        std::unordered_map<int, int> map;\n-        for(int i = 0; i < nums.size(); i++)\n-        {\n-            if(map.find(nums[i]) != map.end())\n-            {\n-                \n-            }\n-        }\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906721083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+#include <vector>\n+#include <unordered_map>\n+\n+namespace algorithms::array::leetcode::two_sum\n+{\n+    std::vector<int> twoSum(std::vector<int>& nums, int target) \n+    {\n+        std::unordered_map<int, int> map;\n+        for(int i = 0; i < nums.size(); i++)\n+        {\n+            if(map.find(nums[i]) != map.end())\n+            {\n+\n+            }\n+            else map[target - ]\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906726570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,8 @@\n             if(map.find(nums[i]) != map.end())\n             {\n \n             }\n-            else map[target - nums]\n+            else map[target - nums[i]]\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725906754512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,8 @@\n             if(map.find(nums[i]) != map.end())\n             {\n \n             }\n-            else map[target - nums[i]] =  \n+            else map[i] =  \n         }\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1725906325696,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::array::leetcode::"
        }
    ]
}
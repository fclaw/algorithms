{
    "sourceFile": "algorithms/graph/leetcode/minimumObstacles.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1725990032250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725990040130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,3 @@\n \n \n+namespace algorithms::graph::leetcode::\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990047272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n \n \n-namespace algorithms::graph::leetcode::\n\\ No newline at end of file\n+namespace algorithms::graph::leetcode::reach\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990104131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,6 @@\n \n \n-namespace algorithms::graph::leetcode::reach\n\\ No newline at end of file\n+namespace algorithms::graph::leetcode::minimumObstacles\n+{\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990112102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-namespace algorithms::graph::leetcode::minimumObstacles\n+namespace algorithms::graph::leetcode::minimum_obstacles\n {\n-\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990120112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,9 @@\n \n \n namespace algorithms::graph::leetcode::minimum_obstacles\n {\n-    \n+    int minimumObstacles(vector<vector<int>>& grid) \n+    {    \n+    }\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990127424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n \n \n namespace algorithms::graph::leetcode::minimum_obstacles\n {\n+\n+using grid = \n+\n     int minimumObstacles(vector<vector<int>>& grid) \n     {    \n     }\n \n"
                },
                {
                    "date": 1725990134055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n namespace algorithms::graph::leetcode::minimum_obstacles\n {\n \n-using grid = \n+using grid = std::vector<vector<int>>\n \n     int minimumObstacles(vector<vector<int>>& grid) \n     {    \n     }\n"
                },
                {
                    "date": 1725990139886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n \n \n+\n namespace algorithms::graph::leetcode::minimum_obstacles\n {\n \n-using grid = std::vector<vector<int>>\n+using grid = std::vector<std::vector<int>>;\n \n     int minimumObstacles(vector<vector<int>>& grid) \n     {    \n     }\n"
                },
                {
                    "date": 1725990144938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n+#include <vector>\n \n \n-\n namespace algorithms::graph::leetcode::minimum_obstacles\n {\n \n using grid = std::vector<std::vector<int>>;\n"
                },
                {
                    "date": 1725990151140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+#include <vector>\n+\n+\n+namespace algorithms::graph::leetcode::minimum_obstacles\n+{\n+\n+using grid = std::vector<std::vector<int>>;\n+\n+    int minimumObstacles(const grid& grid) \n+    {    \n+    }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725990157424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n \n using grid = std::vector<std::vector<int>>;\n \n     int minimumObstacles(const grid& g) \n-    {    \n+    {\n+        return 1;\n     }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726034049159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n \n     /**\n      *  https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner\n      * You are given a 0-indexed 2D integer array grid of size m x n. Each cell has one of two values:\n-\n 0 represents an empty cell,\n 1 represents an obstacle that may be removed.\n You can move up, down, left, or right from and to an empty cell.\n \n"
                }
            ],
            "date": 1725990032250,
            "name": "Commit-0",
            "content": "\n\n"
        }
    ]
}
{
    "sourceFile": "algorithms/dp/leetcode/minimizeTheDifference.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1720355676732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720355683550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,8 @@\n \n namespace algorithms::dp::leetcode\n {\n     /*\n-      https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n-      You are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the ith job.\n-      There are k workers that you can assign jobs to. Each job should be assigned to exactly one worker. \n-      The working time of a worker is the sum of the time it takes to complete all jobs assigned to them. \n-      Your goal is to devise an optimal assignment such that the maximum working time of any worker is minimized.\n-      Return the minimum possible maximum working time of any assignment.\n-      Constraints:\n-        1 <= k <= jobs.length <= 12\n-        1 <= jobs[i] <= 107\n+      \n     */\n     int minimumTimeRequired(std::vector<int>& jobs, int k) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720355694837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,8 @@\n \n namespace algorithms::dp::leetcode\n {\n     /*\n-      \n+      https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements\n     */\n     int minimumTimeRequired(std::vector<int>& jobs, int k) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720355717816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,14 @@\n namespace algorithms::dp::leetcode\n {\n     /*\n       https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements\n+      You are given an m x n integer matrix mat and an integer target.\n+\n+Choose one integer from each row in the matrix such that the absolute difference between target and the sum of the chosen elements is minimized.\n+\n+Return the minimum absolute difference.\n+\n+The absolute difference between two numbers a and b is the absolute value of a - b\n     */\n     int minimumTimeRequired(std::vector<int>& jobs, int k) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720355724664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n {\n     /*\n       https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements\n       You are given an m x n integer matrix mat and an integer target.\n-Choose one integer from each row in the matrix such that the absolute difference between target and the sum of the chosen elements is minimized.\n+      Choose one integer from each row in the matrix such that the absolute difference between target and the sum of the chosen elements is minimized.\n \n Return the minimum absolute difference.\n \n The absolute difference between two numbers a and b is the absolute value of a - b\n"
                },
                {
                    "date": 1720355734059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,9 @@\n       https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements\n       You are given an m x n integer matrix mat and an integer target.\n       Choose one integer from each row in the matrix such that the absolute difference between target\n       and the sum of the chosen elements is minimized.\n-Return the minimum absolute difference.\n-\n+      Return the minimum absolute difference.\n The absolute difference between two numbers a and b is the absolute value of a - b\n     */\n     int minimumTimeRequired(std::vector<int>& jobs, int k) { return 0; }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1720355676732,
            "name": "Commit-0",
            "content": "#include <vector>\n\nnamespace algorithms::dp::leetcode\n{\n    /*\n      https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n      You are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the ith job.\n      There are k workers that you can assign jobs to. Each job should be assigned to exactly one worker. \n      The working time of a worker is the sum of the time it takes to complete all jobs assigned to them. \n      Your goal is to devise an optimal assignment such that the maximum working time of any worker is minimized.\n      Return the minimum possible maximum working time of any assignment.\n      Constraints:\n        1 <= k <= jobs.length <= 12\n        1 <= jobs[i] <= 107\n    */\n    int minimumTimeRequired(std::vector<int>& jobs, int k) { return 0; }\n}"
        }
    ]
}
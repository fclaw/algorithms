{
    "sourceFile": "algorithms/maths/onlinejudge/cola.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1729680790605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729680799222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n namespace algorithms::maths::onlinejudge::cola\n {\n-    \n+    /** https://onlinejudge.org/external/111/11150.pdf */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680806606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,6 @@\n \n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680827698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,10 @@\n \n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n-    \n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680842258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n \n-\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-\n-\n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680891420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,6 +8,7 @@\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680897052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,7 +8,8 @@\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int \n+        int bottles;\n+        \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680902637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+namespace algorithms::maths::onlinejudge::cola\n+{\n+    /** https://onlinejudge.org/external/111/11150.pdf */\n+    int max\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int bottles;\n+\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680912149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,27 +5,12 @@\n \n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n-    int max\n+    int maxBottles(int n) { return }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n \n     }\n-}\n-#include <cassert>\n-#include <optional>\n-#include <iostream>\n-#include <cstdio>\n-\n-namespace algorithms::maths::onlinejudge::cola\n-{\n-    /** https://onlinejudge.org/external/111/11150.pdf */\n-    void submit(std::optional<char*> file)\n-    {\n-        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int bottles;\n-        \n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680921768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,13 @@\n \n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n-    int maxBottles(int n) { return }\n+    int maxBottles(int n) { return 1; }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n+        printf(\"\")\n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680927799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,8 @@\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n-        printf(\"\")\n+        printf(\"%d\\n\", maxBottles())\n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729680943023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n-        printf(\"%d\\n\", maxBottles())\n+        while(std::cin >> bottles)\n+        printf(\"%d\\n\", maxBottles(bottles));\n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729681058395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n+    // A bottle of Choco Cola for every 3 empty bottles returned\n     int maxBottles(int n) { return 1; }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n"
                },
                {
                    "date": 1729681063674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+namespace algorithms::maths::onlinejudge::cola\n+{\n+    /** https://onlinejudge.org/external/111/11150.pdf */\n+    // a bottle of Cola for every 3 empty bottles returned\n+    int maxBottles(int n) { return 1; }\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int bottles;\n+        while(std::cin >> bottles)\n+          printf(\"%d\\n\", maxBottles(bottles));\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774095764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,32 +6,15 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n-    int maxBottles(int n) { return 1; }\n+    int maxBottles(int n) \n+    { \n+        return 1; }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n         while(std::cin >> bottles)\n           printf(\"%d\\n\", maxBottles(bottles));\n     }\n-}\n-#include <cassert>\n-#include <optional>\n-#include <iostream>\n-#include <cstdio>\n-\n-namespace algorithms::maths::onlinejudge::cola\n-{\n-    /** https://onlinejudge.org/external/111/11150.pdf */\n-    // A bottle of Choco Cola for every 3 empty bottles returned\n-    int maxBottles(int n) { return 1; }\n-    void submit(std::optional<char*> file)\n-    {\n-        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int bottles;\n-        while(std::cin >> bottles)\n-        printf(\"%d\\n\", maxBottles(bottles));\n-\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774100802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,12 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n-    int maxBottles(int n) \n+    int maxBottles(int n)\n     { \n-        return 1; }\n+        return 1; \n+    }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n         int bottles;\n"
                },
                {
                    "date": 1729774109370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n-    int maxBottles(int n)\n+    void maxBottles(int n, )\n     { \n         return 1; \n     }\n     void submit(std::optional<char*> file)\n"
                },
                {
                    "date": 1729774117949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+namespace algorithms::maths::onlinejudge::cola\n+{\n+    /** https://onlinejudge.org/external/111/11150.pdf */\n+    // a bottle of Cola for every 3 empty bottles returned\n+    void maxBottles(int curr, int)\n+    { \n+        return 1; \n+    }\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int bottles;\n+        while(std::cin >> bottles)\n+          printf(\"%d\\n\", maxBottles(bottles));\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774128972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n-    void maxBottles(int curr, int)\n+    void maxBottles(int curr, int left)\n     { \n         return 1; \n     }\n     void submit(std::optional<char*> file)\n@@ -17,26 +17,5 @@\n         int bottles;\n         while(std::cin >> bottles)\n           printf(\"%d\\n\", maxBottles(bottles));\n     }\n-}\n-#include <cassert>\n-#include <optional>\n-#include <iostream>\n-#include <cstdio>\n-\n-namespace algorithms::maths::onlinejudge::cola\n-{\n-    /** https://onlinejudge.org/external/111/11150.pdf */\n-    // a bottle of Cola for every 3 empty bottles returned\n-    void maxBottles(int n, )\n-    { \n-        return 1; \n-    }\n-    void submit(std::optional<char*> file)\n-    {\n-        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        int bottles;\n-        while(std::cin >> bottles)\n-          printf(\"%d\\n\", maxBottles(bottles));\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774143558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n-    void maxBottles(int curr, int left)\n+    void maxBottles(int curr, int left, int borrowed)\n     { \n         return 1; \n     }\n     void submit(std::optional<char*> file)\n"
                },
                {
                    "date": 1729774187053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n namespace algorithms::maths::onlinejudge::cola\n {\n     /** https://onlinejudge.org/external/111/11150.pdf */\n     // a bottle of Cola for every 3 empty bottles returned\n+    int total = 0;\n     void maxBottles(int curr, int left, int borrowed)\n     { \n         return 1; \n     }\n"
                },
                {
                    "date": 1729774199825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+namespace algorithms::maths::onlinejudge::cola\n+{\n+    /** https://onlinejudge.org/external/111/11150.pdf */\n+    // a bottle of Cola for every 3 empty bottles returned\n+    int total = 0;\n+    void maxBottles(int curr, int left, int borrowed)\n+    { \n+        return 1; \n+    }\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int bottles;\n+        while(std::cin >> bottles)\n+        {\n+            maxBottles(bottles);\n+        }\n+          printf(\"%d\\n\", maxBottles(bottles));\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774209980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n         int bottles;\n         while(std::cin >> bottles)\n         {\n             maxBottles(bottles, 0, 0);\n+            printf(\"%d\\n\"\n         }\n           printf(\"%d\\n\", maxBottles(bottles));\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729774218543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+#include <cassert>\n+#include <optional>\n+#include <iostream>\n+#include <cstdio>\n+\n+namespace algorithms::maths::onlinejudge::cola\n+{\n+    /** https://onlinejudge.org/external/111/11150.pdf */\n+    // a bottle of Cola for every 3 empty bottles returned\n+    void maxBottles(int curr, int left, int borrowed)\n+    { \n+        return 1; \n+    }\n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        int bottles;\n+        while(std::cin >> bottles)\n+        {\n+            int total = 0;\n+            maxBottles(bottles, 0, 0);\n+            printf(\"%d\\n\"\n+        }\n+          printf(\"%d\\n\", maxBottles(bottles));\n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1729680790604,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::maths::onlinejudge::cola\n{\n    \n}"
        }
    ]
}
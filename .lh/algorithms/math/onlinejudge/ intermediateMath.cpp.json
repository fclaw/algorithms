{
    "sourceFile": "algorithms/math/onlinejudge/ intermediateMath.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1728470573245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728470579234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-namespace algorithms::graph::onlinejudge::angry_programmer\n+namespace algorithms::math::onlinejudge::angry_programmer\n {\n-    \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470591452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-namespace algorithms::math::onlinejudge::angry_programmer\n+namespace algorithms::math::onlinejudge::interme\n {\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470597260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-namespace algorithms::math::onlinejudge::interme\n+namespace algorithms::math::onlinejudge::intermediate\n {\n-\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470606536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n namespace algorithms::math::onlinejudge::intermediate\n {\n-    \n+    /** https://onlinejudge.org/external/107/10773.pdf */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470619120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n namespace algorithms::math::onlinejudge::intermediate\n {\n-    /** https://onlinejudge.org/external/107/10773.pdf */\n+    /** https://onlinejudge.org/external/107/10773.pdf, (several tricky cases */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470624758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,6 @@\n \n namespace algorithms::math::onlinejudge::intermediate\n {\n     /** https://onlinejudge.org/external/107/10773.pdf, several tricky cases */\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728470970707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n namespace algorithms::math::onlinejudge::intermediate\n {\n     /** https://onlinejudge.org/external/107/10773.pdf, several tricky cases \n      * You are trying to cross a river of width d meters. You are given that, the river flows at v m/s and\n-you know that you can speed up the boat in u m/s−1\n+you know that you can speed up the boat in u m/s\n . There may be two goals how to cross the river:\n One goal (called fastest path) is to cross it in fastest time, and it does not matter how far the flow of\n the river takes the boat. The other goal (called shortest path) is to steer the boat in a direction so that\n the flow of the river doesn’t take the boat away, and the boat passes the river in a line perpendicular to\n"
                }
            ],
            "date": 1728470573245,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::graph::onlinejudge::angry_programmer\n{\n    \n}"
        }
    ]
}
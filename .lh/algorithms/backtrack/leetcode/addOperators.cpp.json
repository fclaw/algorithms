{
    "sourceFile": "algorithms/backtrack/leetcode/addOperators.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1726150143151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726150154998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,3 @@\n \n \n+namespace algorithms::backtrack::leetcode::operators\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150171169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,8 @@\n \n \n-namespace algorithms::backtrack::leetcode::operators\n\\ No newline at end of file\n+namespace algorithms::backtrack::leetcode::add_operators\n+{\n+        vector<string> addOperators(string num, int target) {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150179852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n+#include <vector>\n \n \n namespace algorithms::backtrack::leetcode::add_operators\n {\n-        vector<string> addOperators(string num, int target) {\n+    vector<string> addOperators(string num, int target) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150186541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n #include <vector>\n+#include <str\n \n \n namespace algorithms::backtrack::leetcode::add_operators\n {\n"
                },
                {
                    "date": 1726150192406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n #include <vector>\n-#include <str\n+#include <string>\n \n \n namespace algorithms::backtrack::leetcode::add_operators\n {\n-    vector<string> addOperators(string num, int target) {\n+    vector<std::string> addOperators(string num, int target) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150199816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,8 @@\n \n \n namespace algorithms::backtrack::leetcode::add_operators\n {\n-    vector<std::string> addOperators(string num, int target) {\n+    std::vector<std::string> addOperators(std::string num, int target) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150205606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,11 @@\n \n \n namespace algorithms::backtrack::leetcode::add_operators\n {\n-    \n+    /**\n+     * \n+     */\n     std::vector<std::string> addOperators(std::string num, int target) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726150226249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n namespace algorithms::backtrack::leetcode::add_operators\n {\n     /**\n      * https://leetcode.com/problems/expression-add-operators\n-     * Given a string num that contains only digits and an integer target, return all possibilities to insert the binary operators '+', '-', and/or '*' between the digits of num so that the resultant expression evaluates to the target value.\n+     * Given a string num that contains only digits and an integer target, \n+     * return all possibilities to insert the binary operators '+', '-', and/or '*' between the digits of num so that the resultant expression evaluates to the target value.\n \n Note that operands in the returned expressions should not contain leading zeros.\n      */\n     std::vector<std::string> addOperators(std::string num, int target) {\n"
                }
            ],
            "date": 1726150143151,
            "name": "Commit-0",
            "content": "\n\n"
        }
    ]
}
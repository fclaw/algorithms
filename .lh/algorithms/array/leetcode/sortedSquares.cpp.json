{
    "sourceFile": "algorithms/array/leetcode/sortedSquares.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1720945093796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720945101930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include <vector>\n \n namespace algorithms::array::leetcode\n {\n-    // https://leetcode.com/problems/single-number\n+    // https://leetcode.com/problems/squares-of-a-sorted-array/\n     int singleNumber(std::vector<int>& nums) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720945107158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,7 @@\n+#include <vector>\n+\n+namespace algorithms::array::leetcode\n+{\n+    // https://leetcode.com/problems/squares-of-a-sorted-array/\n+    int sortedSquares(std::vector<int>& nums) { return 0; }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720945115149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,7 @@\n+#include <vector>\n+\n+namespace algorithms::array::leetcode\n+{\n+    // https://leetcode.com/problems/squares-of-a-sorted-array/\n+    std::vector<int> sortedSquares(std::vector<int> nums) { return 0; }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720945121485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,10 @@\n #include <vector>\n \n namespace algorithms::array::leetcode\n {\n-    // https://leetcode.com/problems/squares-of-a-sorted-array/\n-    std::vector<int> sortedSquares(std::vector<int> nums) { return 0; }\n-}\n-#include <vector>\n-\n-namespace algorithms::array::leetcode\n-{\n-    // https://leetcode.com/problems/squares-of-a-sorted-array/\n-    int sortedSquares(std::vector<int>& nums) { return 0; }\n-}\n-#include <vector>\n-\n-namespace algorithms::array::leetcode\n-{\n-    // https://leetcode.com/problems/squares-of-a-sorted-array/\n-    int singleNumber(std::vector<int>& nums) { return 0; }\n+    // https://leetcode.com/problems/squares-of-a-sorted-array\n+    std::vector<int> sortedSquares(std::vector<int> nums) \n+    { \n+        return 0; \n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720945128745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,11 @@\n \n namespace algorithms::array::leetcode\n {\n     // https://leetcode.com/problems/squares-of-a-sorted-array\n+    // Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.\n+\n+\n     std::vector<int> sortedSquares(std::vector<int> nums) \n     { \n         return 0; \n     }\n"
                },
                {
                    "date": 1720945153024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n {\n     // https://leetcode.com/problems/squares-of-a-sorted-array\n     // Given an integer array nums sorted in non-decreasing order, \n     // return an array of the squares of each number sorted in non-decreasing order.\n+    // it ought to be soll\n     std::vector<int> sortedSquares(std::vector<int> nums) \n     { \n         return 0; \n     }\n"
                },
                {
                    "date": 1720945159655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n {\n     // https://leetcode.com/problems/squares-of-a-sorted-array\n     // Given an integer array nums sorted in non-decreasing order, \n     // return an array of the squares of each number sorted in non-decreasing order.\n-    // it ought to be solved \n+    // it ought to be solved in find an O(n) solution \n     std::vector<int> sortedSquares(std::vector<int> nums) \n     { \n         return 0; \n     }\n"
                }
            ],
            "date": 1720945093796,
            "name": "Commit-0",
            "content": "#include <vector>\n\nnamespace algorithms::array::leetcode\n{\n    // https://leetcode.com/problems/single-number\n    int singleNumber(std::vector<int>& nums) { return 0; }\n}"
        }
    ]
}
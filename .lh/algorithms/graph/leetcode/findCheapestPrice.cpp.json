{
    "sourceFile": "algorithms/graph/leetcode/findCheapestPrice.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1723875532854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723875552003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n \n \n-namespace algorithms::graph::leetcode::\n\\ No newline at end of file\n+namespace algorithms::graph::leetcode::cheapest_flight\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723875559405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n namespace algorithms::graph::leetcode::cheapest_flight\n {\n-    \n+    /** */ */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723875570773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,9 @@\n namespace algorithms::graph::leetcode::cheapest_flight\n {\n     /** \n      * https://leetcode.com/problems/cheapest-flights-within-k-stops\n-     * \n+     * There are n cities connected by some number of flights. You are given an array flights where flights[i] = [fromi, toi, pricei] indicates that there is a flight from city fromi to city toi with cost pricei.\n+\n+You are also given three integers src, dst, and k, return the cheapest price from src to dst with at most k stops. If there is no such route, return -1\n     */\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1723875532854,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::graph::leetcode::"
        }
    ]
}
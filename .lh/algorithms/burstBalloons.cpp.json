{
    "sourceFile": "algorithms/burstBalloons.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1718077667207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718077673465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,4 @@\n+\n+\n // https://leetcode.com/problems/burst-balloons\n int burstBalloons(vector<int>& nums) { return 0; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718077681272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n+#\n \n-\n // https://leetcode.com/problems/burst-balloons\n int burstBalloons(vector<int>& nums) { return 0; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718077688469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n-#\n+#include <vector>\n \n // https://leetcode.com/problems/burst-balloons\n int burstBalloons(vector<int>& nums) { return 0; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718077693891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n #include <vector>\n \n // https://leetcode.com/problems/burst-balloons\n-int burstBalloons(vector<int>& nums) { return 0; }\n\\ No newline at end of file\n+int burstBalloons(std::vector<int>& nums) { return 0; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718108127780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n #include <vector>\n \n+namespace leetcode::dp\n+\n // https://leetcode.com/problems/burst-balloons\n int burstBalloons(std::vector<int>& nums) { return 0; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718108133122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n #include <vector>\n \n namespace leetcode::dp\n-\n-// https://leetcode.com/problems/burst-balloons\n-int burstBalloons(std::vector<int>& nums) { return 0; }\n\\ No newline at end of file\n+{\n+    // https://leetcode.com/problems/burst-balloons\n+    int burstBalloons(std::vector<int>& nums) { return 0; }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718119976097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,7 @@\n \n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/burst-balloons\n+    \n     int burstBalloons(std::vector<int>& nums) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718119981979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,8 @@\n \n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/burst-balloons\n-    \n+    /*\n+    */\n     int burstBalloons(std::vector<int>& nums) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718119994426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n {\n     // https://leetcode.com/problems/burst-balloons\n     /*\n     While solving solution for a subproblem, say A[0,...,n], Think it like this and ask yourself a question:\n-\n \"which balloon should I burst at last to maximize the result\".\n \n Now suppose you picked balloon at index i to be burst at last then you will successfully reach to two new independent states, i.e, State1 = A[0,...,i-1] and, state2 = A[i+1,...,n]. Now simply fetch result of these states from DP and store this local result as dp[0][i-1] + A[subProblem's starts - 1] * A[i] * A[subProblems's end + 1] + dp[i+1][n], and finally find maximum of these local results for this range or sub problem.\n \n"
                },
                {
                    "date": 1718120002702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,10 @@\n     // https://leetcode.com/problems/burst-balloons\n     /*\n     While solving solution for a subproblem, say A[0,...,n], Think it like this and ask yourself a question:\n     \"which balloon should I burst at last to maximize the result\".\n+Now suppose you picked balloon at index i to be burst at last then you will successfully reach to two new independent states, i.e, State1 = A[0,...,i-1] and, state2 = A[i+1,...,n]. Now simply fetch result of these states from DP and store this local result as dp[0][i-1] + A[subProblem's starts - 1] * A[i] * A[subProblems's end + 1] + dp[i+1][n], and finally find maximum of these local results for this range or sub problem.\n \n-Nowsuppose you picked balloon at index i to be burst at last then you will successfully reach to two new independent states, i.e, State1 = A[0,...,i-1] and, state2 = A[i+1,...,n]. Now simply fetch result of these states from DP and store this local result as dp[0][i-1] + A[subProblem's starts - 1] * A[i] * A[subProblems's end + 1] + dp[i+1][n], and finally find maximum of these local results for this range or sub problem.\n-\n // \"subProblem's starts - 1\" will be '-1' in this case\n // \"subProblems's end + 1\" will be 'n' in this case\n \n Why above mentioned 2 states are independent?\n"
                }
            ],
            "date": 1718077667207,
            "name": "Commit-0",
            "content": "// https://leetcode.com/problems/burst-balloons\nint burstBalloons(vector<int>& nums) { return 0; }"
        }
    ]
}
{
    "sourceFile": "algorithms/graph/leetcode/minCostConnectPoints.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1724495094048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724495103755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-namespace algorithms::graph::leetcode\n+namespace algorithms::graph::leetcode::kruskal\n {\n-    \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495122735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,7 @@\n \n namespace algorithms::graph::leetcode::kruskal\n {\n \n+\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495129961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,7 @@\n \n namespace algorithms::graph::leetcode::kruskal\n {\n \n+using points = \n \n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495137269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n+#include <vector>\n \n-\n namespace algorithms::graph::leetcode::kruskal\n {\n \n using points = \n"
                },
                {
                    "date": 1724495145193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,7 @@\n \n namespace algorithms::graph::leetcode::kruskal\n {\n \n-using points = \n+using points = vector<vector<int>>\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495152265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,7 @@\n \n namespace algorithms::graph::leetcode::kruskal\n {\n \n-using points = vector<vector<int>>\n+using points = std::vector<std::vector<int>>;\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495160763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,9 @@\n {\n \n using points = std::vector<std::vector<int>>;\n \n+int minCostConnectPoints(vector<vector<int>>& points) {\n+        \n+    }\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495167072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,10 @@\n namespace algorithms::graph::leetcode::kruskal\n {\n \n using points = std::vector<std::vector<int>>;\n-    int minCostConnectPoints(vector<vector<int>>& points) {\n+    int minCostConnectPoints(vector<vector<int>>& points) \n+    {\n         \n     }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724495199641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+#include <vector>\n+\n+namespace algorithms::graph::leetcode::kruskal\n+{\n+\n+using points = std::vector<std::vector<int>>;\n+\n+    /**\n+     * https://leetcode.com/problems/min-cost-to-connect-all-points\n+     */\n+    int minCostConnectPoints(const points& ps) \n+    {\n+        return 1;\n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1724495094048,
            "name": "Commit-0",
            "content": "\n\nnamespace algorithms::graph::leetcode\n{\n    \n}"
        }
    ]
}
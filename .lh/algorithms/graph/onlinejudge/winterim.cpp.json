{
    "sourceFile": "algorithms/graph/onlinejudge/winterim.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1727957525262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727957530376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n \n \n \n-namespace algorithms::graph::onlinejudge::winter\n\\ No newline at end of file\n+namespace algorithms::graph::onlinejudge::winterim\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957538287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,7 @@\n \n \n \n-namespace algorithms::graph::onlinejudge::winterim\n\\ No newline at end of file\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /**   */\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957543750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \n \n namespace algorithms::graph::onlinejudge::winterim\n {\n-    /**   */\n+    /** https://onlinejudge.org/external/9/907.pdf */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957631176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,13 @@\n \n \n namespace algorithms::graph::onlinejudge::winterim\n {\n-    /** https://onlinejudge.org/external/9/907.pdf */\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible\n+campsites that we can use along the way and we want to do this trip so that we only stop K nights to\n+camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n+camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n+done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n+10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n+Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957637669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,9 @@\n \n namespace algorithms::graph::onlinejudge::winterim\n {\n     /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible\n-campsites that we can use along the way and we want to do this trip so that we only stop K nights to\n+     * We have a list of all possible campsites that we can use along the way and we want to do this trip so that we only stop K nights to\n camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n"
                },
                {
                    "date": 1727957645734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+\n+\n+\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible campsites that we can use along the way \n+     * and we want to do this trip so that we only stop K nights to\n+camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n+camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n+done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n+10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n+Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957650873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,24 +4,10 @@\n namespace algorithms::graph::onlinejudge::winterim\n {\n     /** https://onlinejudge.org/external/9/907.pdf \n      * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to\n-camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n+     * and we want to do this trip so that we only stop K nights to camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-}\n-\n-\n-\n-namespace algorithms::graph::onlinejudge::winterim\n-{\n-    /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible campsites that we can use along the way and we want to do this trip so that we only stop K nights to\n-camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n-camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n-done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n-10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n-Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957662844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n namespace algorithms::graph::onlinejudge::winterim\n {\n     /** https://onlinejudge.org/external/9/907.pdf \n      * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to camp. We also know in advance the distance between consecutive campsites and we are only allowed to\n-camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n+     * and we want to do this trip so that we only stop K nights to camp. \n+     * We also know in advance the distance between consecutive campsites and we are only allowed to camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957672669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n {\n     /** https://onlinejudge.org/external/9/907.pdf \n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n-     * We also know in advance the distance between consecutive campsites and we are only allowed to camp at a campsite. Our goal is to plan the trip so that we minimise the maximum amount of walking\n+     * We also know in advance the distance between consecutive campsites and \n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip so that we minimize the maximum amount of walking\n done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957678026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n     /** https://onlinejudge.org/external/9/907.pdf \n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n      * We also know in advance the distance between consecutive campsites and \n-     * we are only allowed to camp at a campsite. Our goal is to plan the trip so that we minimize the maximum amount of walking\n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n+     * so that we minimise the maximum amount of walking\n done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957685564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n      * We also know in advance the distance between consecutive campsites and \n      * we are only allowed to camp at a campsite. Our goal is to plan the trip \n-     * so that we minimise the maximum amount of walking\n-done in a single day. In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n+     * so that we minimise the maximum amount of walking done in a single day. \n+     * In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957865207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+\n+\n+\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible campsites that we can use along the way \n+     * and we want to do this trip so that we only stop K nights to camp. \n+     * We also know in advance the distance between consecutive campsites and \n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n+     * so that we minimise the maximum amount of walking done in a single day. \n+     * In other words, if our trip involves 2 nights (3 days of walking), and we walk 9, 0, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n+Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957879281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,22 +8,8 @@\n      * and we want to do this trip so that we only stop K nights to camp. \n      * We also know in advance the distance between consecutive campsites and \n      * we are only allowed to camp at a campsite. Our goal is to plan the trip \n      * so that we minimise the maximum amount of walking done in a single day. \n-     * In other words, if our trip involves 2 nights (3 days of walking), and we walk 9, 0, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n-Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-}\n-\n-\n-\n-namespace algorithms::graph::onlinejudge::winterim\n-{\n-    /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to camp. \n-     * We also know in advance the distance between consecutive campsites and \n-     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n-     * so that we minimise the maximum amount of walking done in a single day. \n-     * In other words, if our trip involves 2 nights (3 days of walking), and we walk 9,\n-10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n-Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n+     * In other words, if our trip involves 2 nights (3 days of walking), \n+     * and we walk 9, 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957889172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,10 @@\n      * We also know in advance the distance between consecutive campsites and \n      * we are only allowed to camp at a campsite. Our goal is to plan the trip \n      * so that we minimise the maximum amount of walking done in a single day. \n      * In other words, if our trip involves 2 nights (3 days of walking), \n-     * and we walk 9, 10, 5 miles on each day respectively, the cost (maximum amount of walking done in one day) is 10.\n+     * and we walk 9, 10, 5 miles on each day respectively, \n+     * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n+     minimise\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957894985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+\n+\n+\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible campsites that we can use along the way \n+     * and we want to do this trip so that we only stop K nights to camp. \n+     * We also know in advance the distance between consecutive campsites and \n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n+     * so that we minimise the maximum amount of walking done in a single day. \n+     * In other words, if our trip involves 2 nights (3 days of walking), \n+     * and we walk 9, 10, 5 miles on each day respectively, \n+     * the cost (maximum amount of walking done in one day) is 10.\n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n+     minimiseWal\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957901457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,25 +12,7 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-     minimiseWal\n+     minimiseWalking\n \n-}\n-\n-\n-\n-namespace algorithms::graph::onlinejudge::winterim\n-{\n-    /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to camp. \n-     * We also know in advance the distance between consecutive campsites and \n-     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n-     * so that we minimise the maximum amount of walking done in a single day. \n-     * In other words, if our trip involves 2 nights (3 days of walking), \n-     * and we walk 9, 10, 5 miles on each day respectively, \n-     * the cost (maximum amount of walking done in one day) is 10.\n-     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-     minimise\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957923300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,7 +12,7 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-     minimiseWalking\n+     \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727957936966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,7 +12,7 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-     \n+     int deviseCampingStrategy()\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727958067479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n      * so that we minimise the maximum amount of walking done in a single day. \n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n-     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. */\n-     int deviseCampingStrategy()\n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n+     * \n+     * */\n+     int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727958087916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n-     * \n+     * hints (Converting General Graph to DAG): s: pos, night left\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727958093106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n-     * hints (Converting General Graph to DAG): s: pos, night left\n+     * hints (Converting General Graph to DAG): state(pos, night left\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727958098760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n-     * hints (Converting General Graph to DAG): state(pos, night left\n-     * */\n+     * hints (Converting General Graph to DAG): state(pos, night left) */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959048937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+\n+\n+\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible campsites that we can use along the way \n+     * and we want to do this trip so that we only stop K nights to camp. \n+     * We also know in advance the distance between consecutive campsites and \n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n+     * so that we minimise the maximum amount of walking done in a single day. \n+     * In other words, if our trip involves 2 nights (3 days of walking), \n+     * and we walk 9, 10, 5 miles on each day respectively, \n+     * the cost (maximum amount of walking done in one day) is 10.\n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n+     * hints (Converting General Graph to DAG): state(pos, night left) */\n+     int deviseCampingStrategy() { return 1; }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959218557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+\n+\n+\n+namespace algorithms::graph::onlinejudge::winterim\n+{\n+    /** https://onlinejudge.org/external/9/907.pdf \n+     * We have a list of all possible campsites that we can use along the way \n+     * and we want to do this trip so that we only stop K nights to camp. \n+     * We also know in advance the distance between consecutive campsites and \n+     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n+     * so that we minimise the maximum amount of walking done in a single day. \n+     * In other words, if our trip involves 2 nights (3 days of walking), \n+     * and we walk 9, 10, 5 miles on each day respectively, \n+     * the cost (maximum amount of walking done in one day) is 10.\n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n+     * hints (Converting General Graph to DAG): state(pos, night left) */\n+     int deviseCampingStrategy() { return 1; }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959270513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,56 +2,18 @@\n \n \n namespace algorithms::graph::onlinejudge::winterim\n {\n-    /** https://onlinejudge.org/external/9/907.pdf \n+    /** https://onlinejudge.org/external/9/907.pdf. closely rese\n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n      * We also know in advance the distance between consecutive campsites and \n      * we are only allowed to camp at a campsite. Our goal is to plan the trip \n      * so that we minimise the maximum amount of walking done in a single day. \n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n-     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n+     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) */\n      int deviseCampingStrategy() { return 1; }\n \n-}\n-\n-\n-\n-namespace algorithms::graph::onlinejudge::winterim\n-{\n-    /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to camp. \n-     * We also know in advance the distance between consecutive campsites and \n-     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n-     * so that we minimise the maximum amount of walking done in a single day. \n-     * In other words, if our trip involves 2 nights (3 days of walking), \n-     * and we walk 9, 10, 5 miles on each day respectively, \n-     * the cost (maximum amount of walking done in one day) is 10.\n-     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n-     * hints (Converting General Graph to DAG): state(pos, night left) */\n-     int deviseCampingStrategy() { return 1; }\n-\n-}\n-\n-\n-\n-namespace algorithms::graph::onlinejudge::winterim\n-{\n-    /** https://onlinejudge.org/external/9/907.pdf \n-     * We have a list of all possible campsites that we can use along the way \n-     * and we want to do this trip so that we only stop K nights to camp. \n-     * We also know in advance the distance between consecutive campsites and \n-     * we are only allowed to camp at a campsite. Our goal is to plan the trip \n-     * so that we minimise the maximum amount of walking done in a single day. \n-     * In other words, if our trip involves 2 nights (3 days of walking), \n-     * and we walk 9, 10, 5 miles on each day respectively, \n-     * the cost (maximum amount of walking done in one day) is 10.\n-     * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9. \n-     * hints (Converting General Graph to DAG): state(pos, night left) */\n-     int deviseCampingStrategy() { return 1; }\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959276607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n \n \n namespace algorithms::graph::onlinejudge::winterim\n {\n-    /** https://onlinejudge.org/external/9/907.pdf. closely rese\n+    /** https://onlinejudge.org/external/9/907.pdf. \n+     * closely resemble  https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n      * We also know in advance the distance between consecutive campsites and \n      * we are only allowed to camp at a campsite. Our goal is to plan the trip \n"
                },
                {
                    "date": 1727959853877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,10 @@\n      * In other words, if our trip involves 2 nights (3 days of walking), \n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n-     * hints (Converting General Graph to DAG): state(pos, night left) */\n+     * hints (Converting General Graph to DAG): state(pos, night left) \n+     * \n+     * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959865618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * \n+     * implicit dag of \n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959880582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * implicit dag of \n+     * implicit dag of partially-\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959890575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * implicit dag of partially-\n+     * implicit dag of partial solutions\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959896455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * implicit dag of partial solutions\n+     * implicit dag (tree)  of partial solutions\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959901928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * implicit dag (tree)  of partial solutions\n+     * iamplicit dag (tree) of partial solutions\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959907186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * iamplicit dag (tree) of partial solutions\n+     * an implicit dag (tree) of partial solutions \n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959919025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,12 @@\n \n \n namespace algorithms::graph::onlinejudge::winterim\n {\n+\n+\n+\n+\n     /** https://onlinejudge.org/external/9/907.pdf. \n      * closely resemble  https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n@@ -14,9 +18,9 @@\n      * and we walk 9, 10, 5 miles on each day respectively, \n      * the cost (maximum amount of walking done in one day) is 10.\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n-     * an implicit dag (tree) of partial solutions \n+     * an implicit dag (tree) of partial solutions\n      * */\n      int deviseCampingStrategy() { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959926964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n \n namespace algorithms::graph::onlinejudge::winterim\n {\n \n+typedef std::vec\n \n \n-\n     /** https://onlinejudge.org/external/9/907.pdf. \n      * closely resemble  https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n      * We have a list of all possible campsites that we can use along the way \n      * and we want to do this trip so that we only stop K nights to camp. \n"
                },
                {
                    "date": 1727959935910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n+#include <vector>\n \n \n-\n namespace algorithms::graph::onlinejudge::winterim\n {\n \n-typedef std::vec\n+typedef std::v\n \n \n     /** https://onlinejudge.org/external/9/907.pdf. \n      * closely resemble  https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n"
                },
                {
                    "date": 1727959945416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n #include <vector>\n \n-\n namespace algorithms::graph::onlinejudge::winterim\n {\n \n-typedef std::v\n+typedef std::vector<int> vi;\n \n \n     /** https://onlinejudge.org/external/9/907.pdf. \n      * closely resemble  https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs\n"
                },
                {
                    "date": 1727959959442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-     int deviseCampingStrategy() { return 1; }\n+     int deviseCampingStrategy(std:) { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959970043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-     int deviseCampingStrategy(std:) { return 1; }\n+     int deviseCampingStrategy(const vi& camps, ) { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959975123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-     int deviseCampingStrategy(const vi& camps, ) { return 1; }\n+     int deviseCampingStrategy(const vi& camps, int ) { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959982325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-     int deviseCampingStrategy(const vi& camps, int ) { return 1; }\n+     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727959996623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,8 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n+    int backtrack()\n      int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960003327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,6 +21,7 @@\n      * an implicit dag (tree) of partial solutions\n      * */\n     int backtrack()\n      int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n+     \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960009276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-    int backtrack()\n-     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n-     \n+    int backtrack() {}\n+    int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960016641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n      * Another schedule that involves walking 9, 6, 9 miles on each day has cost 9.\n      * hints (Converting General Graph to DAG): state(pos, night left) \n      * an implicit dag (tree) of partial solutions\n      * */\n-    int backtrack() {}\n+    void backtrack() {}\n     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n+    \n \n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960053901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n      * an implicit dag (tree) of partial solutions\n      * */\n     void backtrack() {}\n     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n-    \n+         \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960060077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n      * an implicit dag (tree) of partial solutions\n      * */\n     void backtrack() {}\n     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n-         \n+    void submit() {}     \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960084274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,10 @@\n      * an implicit dag (tree) of partial solutions\n      * */\n     void backtrack() {}\n     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n-    void submit() {}     \n+    void submit(std::optional<char*> file)\n+    {\n+        if(file.has_value()) \n+          assert(std::freopen(file.value(), \"r\", stdin) != nullptr);     \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960102043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,9 @@\n #include <vector>\n+#include <cassert>\n+#include <optional>\n \n+\n namespace algorithms::graph::onlinejudge::winterim\n {\n \n typedef std::vector<int> vi;\n@@ -24,7 +27,8 @@\n     int deviseCampingStrategy(const vi& camps, int nights) { return 1; }\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) \n-          assert(std::freopen(file.value(), \"r\", stdin) != nullptr);     \n+          assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+    }     \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960108703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n #include <vector>\n #include <cassert>\n #include <optional>\n+#include <iostream>\n \n-\n namespace algorithms::graph::onlinejudge::winterim\n {\n \n typedef std::vector<int> vi;\n"
                },
                {
                    "date": 1727960114979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,6 +28,8 @@\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) \n           assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n+        \n+          \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727960215552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,8 @@\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) \n           assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        \n-          \n+        while(std::cin )\n+\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1727957525262,
            "name": "Commit-0",
            "content": "\n\n\nnamespace algorithms::graph::onlinejudge::winter"
        }
    ]
}
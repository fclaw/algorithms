{
    "sourceFile": "algorithms/onlinejudge/dp/lsdi.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1720542197377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720542203263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n {\n     /*\n       https://onlinejudge.org/external/4/481.pdf\n     */\n-    std::tuple<int, std::vector<int>> lengthOfLIS(std::vector<int> nums) \n+    std::tuple<int, std::vector<int>> (std::vector<int> nums) \n     {\n         std::vector<int> dp(nums.size(), 1);\n         // dp[0] = 1;\n         for (int i = 1; i < dp.size(); i++)\n"
                },
                {
                    "date": 1720542211492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n {\n     /*\n       https://onlinejudge.org/external/4/481.pdf\n     */\n-    std::tuple<int, std::vector<int>> (std::vector<int> nums) \n+    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n     {\n         std::vector<int> dp(nums.size(), 1);\n         // dp[0] = 1;\n         for (int i = 1; i < dp.size(); i++)\n"
                },
                {
                    "date": 1720542217835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n           nums.push_back(x);\n \n         int l;\n         std::vector<int> lis;\n-        std::tie(l, lis) = lengthOfLIS(nums);\n+        std::tie(l, lis) = hitMaxMissiles(nums);\n         printf(\"%d\\n-\\n\", l);\n         for(auto x : lis)\n           printf(\"%d\\n\", x); \n     }\n"
                },
                {
                    "date": 1720542256824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n         int l;\n         std::vector<int> lis;\n         std::tie(l, lis) = hitMaxMissiles(nums);\n-        printf(\"%d\\n-\\n\", l);\n+        printf(\"Max hits:%d\\n-\\n\", l);\n         for(auto x : lis)\n           printf(\"%d\\n\", x); \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720542262451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n         int l;\n         std::vector<int> lis;\n         std::tie(l, lis) = hitMaxMissiles(nums);\n-        printf(\"Max hits:%d\\n-\\n\", l);\n+        printf(\"Max hits:%d\\n\", l);\n         for(auto x : lis)\n-          printf(\"%d\\n\", x); \n+          printf(\"%d\\n\", x);\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1720542197377,
            "name": "Commit-0",
            "content": "#include <vector>\n#include <iostream>\n\nnamespace algorithms::onlinejudge::dp\n{\n    /*\n      https://onlinejudge.org/external/4/481.pdf\n    */\n    std::tuple<int, std::vector<int>> lengthOfLIS(std::vector<int> nums) \n    {\n        std::vector<int> dp(nums.size(), 1);\n        // dp[0] = 1;\n        for (int i = 1; i < dp.size(); i++)\n          for (int j = 0; j < i; j++)\n            if(nums[i] > nums[j])\n              dp[i] = std::max(dp[i], 1 + dp[j]);\n\n        auto first = dp.begin();\n        auto last = dp.end();\n\n        auto max_iter = max_element(first, last);\n        int pos = max_iter - first;\n  \n        std::vector<int> lis;\n        lis.push_back(nums[pos]);\n        int i = pos - 1;\n        while(i >= 0)\n        {\n            if(dp[i] == dp[pos] - 1 && \n               nums[i] < nums[pos])\n            { \n                lis.push_back(nums[i]);\n                pos = i;\n                i--;\n            }\n            else i--;\n        }\n\n        std::reverse(lis.begin(), lis.end());\n\n        return {*max_iter, lis};\n    }\n\n    void submit_497()\n    {\n        std::vector<int> nums;\n        int x;\n        while(scanf(\"%d\", &x) != EOF)\n          nums.push_back(x);\n\n        int l;\n        std::vector<int> lis;\n        std::tie(l, lis) = lengthOfLIS(nums);\n        printf(\"%d\\n-\\n\", l);\n        for(auto x : lis)\n          printf(\"%d\\n\", x); \n    }\n}"
        }
    ]
}
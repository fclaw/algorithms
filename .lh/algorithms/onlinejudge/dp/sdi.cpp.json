{
    "sourceFile": "algorithms/onlinejudge/dp/sdi.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1720542289999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720542296493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,21 +42,21 @@\n     }\n \n     void submit_497()\n     {\n-              int TC;\n+        int TC;\n         scanf(\"%d\", &TC);\n         while(--TC >= 0)\n         {\n-        std::vector<int> nums;\n-        int x;\n-        while(scanf(\"%d\", &x) != EOF)\n-          nums.push_back(x);\n+          std::vector<int> nums;\n+          int x;\n+          while(scanf(\"%d\", &x) != EOF)\n+            nums.push_back(x);\n \n-        int l;\n-        std::vector<int> lis;\n-        std::tie(l, lis) = hitMaxMissiles(nums);\n-        printf(\"Max hits:%d\\n\", l);\n-        for(auto x : lis)\n-          printf(\"%d\\n\", x);\n+          int l;\n+          std::vector<int> lis;\n+          std::tie(l, lis) = hitMaxMissiles(nums);\n+          printf(\"Max hits:%d\\n\", l);\n+          for(auto x : lis)\n+            printf(\"%d\\n\", x);\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720542303392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,18 @@\n         int TC;\n         scanf(\"%d\", &TC);\n         while(--TC >= 0)\n         {\n-          std::vector<int> nums;\n-          int x;\n-          while(scanf(\"%d\", &x) != EOF)\n+           std::vector<int> nums;\n+           int x;\n+           while(scanf(\"%d\", &x) != EOF)\n             nums.push_back(x);\n \n           int l;\n           std::vector<int> lis;\n           std::tie(l, lis) = hitMaxMissiles(nums);\n           printf(\"Max hits:%d\\n\", l);\n           for(auto x : lis)\n             printf(\"%d\\n\", x);\n+        };\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720542309001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,15 +49,15 @@\n         {\n            std::vector<int> nums;\n            int x;\n            while(scanf(\"%d\", &x) != EOF)\n-            nums.push_back(x);\n+             nums.push_back(x);\n \n-          int l;\n-          std::vector<int> lis;\n-          std::tie(l, lis) = hitMaxMissiles(nums);\n-          printf(\"Max hits:%d\\n\", l);\n-          for(auto x : lis)\n-            printf(\"%d\\n\", x);\n+           int l;\n+           std::vector<int> lis;\n+           std::tie(l, lis) = hitMaxMissiles(nums);\n+           printf(\"Max hits:%d\\n\", l);\n+           for(auto x : lis)\n+             printf(\"%d\\n\", x);\n         };\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720542334757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         while(--TC >= 0)\n         {\n            std::vector<int> nums;\n            int x;\n-           while(scanf(\"%d\", &x) != EOF)\n+           while(scanf(\"%d\", &x) != '\\n')\n              nums.push_back(x);\n \n            int l;\n            std::vector<int> lis;\n"
                },
                {
                    "date": 1720542345395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         while(--TC >= 0)\n         {\n            std::vector<int> nums;\n            int x;\n-           while(scanf(\"%d\", &x) != '\\n')\n+           while(scanf(\"%d\", &x) != ' ')\n              nums.push_back(x);\n \n            int l;\n            std::vector<int> lis;\n"
                },
                {
                    "date": 1720542354750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         while(--TC >= 0)\n         {\n            std::vector<int> nums;\n            int x;\n-           while(scanf(\"%d\", &x) != ' ')\n+           while(scanf(\"%d\\n\", &x) != ' ')\n              nums.push_back(x);\n \n            int l;\n            std::vector<int> lis;\n"
                },
                {
                    "date": 1720543310586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+#include <vector>\n+#include <iostream>\n+\n+namespace algorithms::onlinejudge::dp\n+{\n+    /*\n+      https://onlinejudge.org/external/4/481.pdf\n+    */\n+    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n+    {\n+        std::vector<int> dp(nums.size(), 1);\n+        // dp[0] = 1;\n+        for (int i = 1; i < dp.size(); i++)\n+          for (int j = 0; j < i; j++)\n+            if(nums[i] > nums[j])\n+              dp[i] = std::max(dp[i], 1 + dp[j]);\n+\n+        auto first = dp.begin();\n+        auto last = dp.end();\n+\n+        auto max_iter = max_element(first, last);\n+        int pos = max_iter - first;\n+  \n+        std::vector<int> lis;\n+        lis.push_back(nums[pos]);\n+        int i = pos - 1;\n+        while(i >= 0)\n+        {\n+            if(dp[i] == dp[pos] - 1 && \n+               nums[i] < nums[pos])\n+            { \n+                lis.push_back(nums[i]);\n+                pos = i;\n+                i--;\n+            }\n+            else i--;\n+        }\n+\n+        std::reverse(lis.begin(), lis.end());\n+\n+        return {*max_iter, lis};\n+    }\n+\n+    void submit_497()\n+    {\n+        int TC;\n+        scanf(\"%d\", &TC);\n+        while(--TC >= 0)\n+        {\n+           std::vector<int> nums;\n+           int x;\n+           while(scanf(\"%d\", &x) != ' ')\n+             nums.push_back(x);\n+\n+           int l;\n+           std::vector<int> lis;\n+           std::tie(l, lis) = hitMaxMissiles(nums);\n+           printf(\"Max hits:%d\\n\", l);\n+           for(auto x : lis)\n+             printf(\"%d\\n\", x);\n+        };\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720543321456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         while(--TC >= 0)\n         {\n            std::vector<int> nums;\n            int x;\n-           while(scanf(\"%d\", &x) != ' ')\n+           while(scanf(\"%d\", &x))\n              nums.push_back(x);\n \n            int l;\n            std::vector<int> lis;\n@@ -59,68 +59,5 @@\n            for(auto x : lis)\n              printf(\"%d\\n\", x);\n         };\n     }\n-}\n-#include <vector>\n-#include <iostream>\n-\n-namespace algorithms::onlinejudge::dp\n-{\n-    /*\n-      https://onlinejudge.org/external/4/481.pdf\n-    */\n-    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n-    {\n-        std::vector<int> dp(nums.size(), 1);\n-        // dp[0] = 1;\n-        for (int i = 1; i < dp.size(); i++)\n-          for (int j = 0; j < i; j++)\n-            if(nums[i] > nums[j])\n-              dp[i] = std::max(dp[i], 1 + dp[j]);\n-\n-        auto first = dp.begin();\n-        auto last = dp.end();\n-\n-        auto max_iter = max_element(first, last);\n-        int pos = max_iter - first;\n-  \n-        std::vector<int> lis;\n-        lis.push_back(nums[pos]);\n-        int i = pos - 1;\n-        while(i >= 0)\n-        {\n-            if(dp[i] == dp[pos] - 1 && \n-               nums[i] < nums[pos])\n-            { \n-                lis.push_back(nums[i]);\n-                pos = i;\n-                i--;\n-            }\n-            else i--;\n-        }\n-\n-        std::reverse(lis.begin(), lis.end());\n-\n-        return {*max_iter, lis};\n-    }\n-\n-    void submit_497()\n-    {\n-        int TC;\n-        scanf(\"%d\", &TC);\n-        while(--TC >= 0)\n-        {\n-           std::vector<int> nums;\n-           int x;\n-           while(scanf(\"%d\\n\", &x) != ' ')\n-             nums.push_back(x);\n-\n-           int l;\n-           std::vector<int> lis;\n-           std::tie(l, lis) = hitMaxMissiles(nums);\n-           printf(\"Max hits:%d\\n\", l);\n-           for(auto x : lis)\n-             printf(\"%d\\n\", x);\n-        };\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720543349033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,25 +39,5 @@\n         std::reverse(lis.begin(), lis.end());\n \n         return {*max_iter, lis};\n     }\n-\n-    void submit_497()\n-    {\n-        int TC;\n-        scanf(\"%d\", &TC);\n-        while(--TC >= 0)\n-        {\n-           std::vector<int> nums;\n-           int x;\n-           while(scanf(\"%d\", &x))\n-             nums.push_back(x);\n-\n-           int l;\n-           std::vector<int> lis;\n-           std::tie(l, lis) = hitMaxMissiles(nums);\n-           printf(\"Max hits:%d\\n\", l);\n-           for(auto x : lis)\n-             printf(\"%d\\n\", x);\n-        };\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720543456354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+#include <vector>\n+#include <iostream>\n+\n+namespace algorithms::onlinejudge::dp\n+{\n+    /*\n+      https://onlinejudge.org/external/4/481.pdf\n+    */\n+    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n+    {\n+        std::vector<int> dp(nums.size(), 1);\n+        // dp[0] = 1;\n+        for (int i = 1; i < dp.size(); i++)\n+          for (int j = 0; j < i; j++)\n+            if(nums[i] > nums[j])\n+              dp[i] = std::max(dp[i], 1 + dp[j]);\n+\n+        auto first = dp.begin();\n+        auto last = dp.end();\n+\n+        auto max_iter = max_element(first, last);\n+        int pos = max_iter - first;\n+  \n+        std::vector<int> lis;\n+        lis.push_back(nums[pos]);\n+        int i = pos - 1;\n+        while(i >= 0)\n+        {\n+            if(dp[i] == dp[pos] - 1 && \n+               nums[i] < nums[pos])\n+            { \n+                lis.push_back(nums[i]);\n+                pos = i;\n+                i--;\n+            }\n+            else i--;\n+        }\n+\n+        std::reverse(lis.begin(), lis.end());\n+\n+        return {*max_iter, lis};\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720544007739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,48 +39,5 @@\n         std::reverse(lis.begin(), lis.end());\n \n         return {*max_iter, lis};\n     }\n-}\n-#include <vector>\n-#include <iostream>\n-\n-namespace algorithms::onlinejudge::dp\n-{\n-    /*\n-      https://onlinejudge.org/external/4/481.pdf\n-    */\n-    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n-    {\n-        std::vector<int> dp(nums.size(), 1);\n-        // dp[0] = 1;\n-        for (int i = 1; i < dp.size(); i++)\n-          for (int j = 0; j < i; j++)\n-            if(nums[i] > nums[j])\n-              dp[i] = std::max(dp[i], 1 + dp[j]);\n-\n-        auto first = dp.begin();\n-        auto last = dp.end();\n-\n-        auto max_iter = max_element(first, last);\n-        int pos = max_iter - first;\n-  \n-        std::vector<int> lis;\n-        lis.push_back(nums[pos]);\n-        int i = pos - 1;\n-        while(i >= 0)\n-        {\n-            if(dp[i] == dp[pos] - 1 && \n-               nums[i] < nums[pos])\n-            { \n-                lis.push_back(nums[i]);\n-                pos = i;\n-                i--;\n-            }\n-            else i--;\n-        }\n-\n-        std::reverse(lis.begin(), lis.end());\n-\n-        return {*max_iter, lis};\n-    }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1720542289999,
            "name": "Commit-0",
            "content": "#include <vector>\n#include <iostream>\n\nnamespace algorithms::onlinejudge::dp\n{\n    /*\n      https://onlinejudge.org/external/4/481.pdf\n    */\n    std::tuple<int, std::vector<int>> hitMaxMissiles(std::vector<int> nums) \n    {\n        std::vector<int> dp(nums.size(), 1);\n        // dp[0] = 1;\n        for (int i = 1; i < dp.size(); i++)\n          for (int j = 0; j < i; j++)\n            if(nums[i] > nums[j])\n              dp[i] = std::max(dp[i], 1 + dp[j]);\n\n        auto first = dp.begin();\n        auto last = dp.end();\n\n        auto max_iter = max_element(first, last);\n        int pos = max_iter - first;\n  \n        std::vector<int> lis;\n        lis.push_back(nums[pos]);\n        int i = pos - 1;\n        while(i >= 0)\n        {\n            if(dp[i] == dp[pos] - 1 && \n               nums[i] < nums[pos])\n            { \n                lis.push_back(nums[i]);\n                pos = i;\n                i--;\n            }\n            else i--;\n        }\n\n        std::reverse(lis.begin(), lis.end());\n\n        return {*max_iter, lis};\n    }\n\n    void submit_497()\n    {\n              int TC;\n        scanf(\"%d\", &TC);\n        while(--TC >= 0)\n        {\n        std::vector<int> nums;\n        int x;\n        while(scanf(\"%d\", &x) != EOF)\n          nums.push_back(x);\n\n        int l;\n        std::vector<int> lis;\n        std::tie(l, lis) = hitMaxMissiles(nums);\n        printf(\"Max hits:%d\\n\", l);\n        for(auto x : lis)\n          printf(\"%d\\n\", x);\n    }\n}"
        }
    ]
}
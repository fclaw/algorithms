{
    "sourceFile": "algorithms/backtrack/leetcode/isAdditiveNumber.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1721999125775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721999138258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+#include <str\n+\n namespace algorithms::backtrack::leetcode\n {\n-    \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721999153228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n-#include <str\n+#include <string>\n \n namespace algorithms::backtrack::leetcode\n {\n-\n+ bool isAdditiveNumber(string num) {\n+        \n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721999159430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n #include <string>\n \n namespace algorithms::backtrack::leetcode\n {\n- bool isAdditiveNumber(string num) {\n-        \n+    bool isAdditiveNumber(string num) \n+    {\n+           \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721999167265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n #include <string>\n \n namespace algorithms::backtrack::leetcode\n {\n-    bool isAdditiveNumber(string num) \n+    bool isAdditiveNumber(std::string s) \n     {\n-           \n+\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721999180701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n #include <string>\n \n namespace algorithms::backtrack::leetcode\n {\n+    // https://leetcode.com/problems/additive-number/\n     bool isAdditiveNumber(std::string s) \n     {\n-\n+        return false;\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721999196185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n #include <string>\n \n namespace algorithms::backtrack::leetcode\n {\n-    // https://leetcode.com/problems/additive-number/\n+    // https://leetcode.com/problems/additive-number\n+    /*\n+    */\n     bool isAdditiveNumber(std::string s) \n     {\n         return false;\n     }\n"
                },
                {
                    "date": 1721999216390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n {\n     // https://leetcode.com/problems/additive-number\n     /*\n        An additive number is a string whose digits can form an additive sequence.\n-\n A valid additive sequence should contain at least three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\n \n Given a string containing only digits, return true if it is an additive number or false otherwise.\n     */\n"
                },
                {
                    "date": 1722004218693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n        A valid additive sequence should contain at least three numbers. \n        Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\n        Given a string containing only digits, return true if it is an additive number or false otherwise.\n     */\n+    b\n     bool isAdditiveNumber(std::string s) \n     {\n         return false;\n     }\n"
                }
            ],
            "date": 1721999125775,
            "name": "Commit-0",
            "content": "namespace algorithms::backtrack::leetcode\n{\n    \n}"
        }
    ]
}
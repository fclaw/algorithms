{
    "sourceFile": "algorithms/array/leetcode/dailyTemperatures.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1719466293060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719466308404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n {\n     // https://leetcode.com/problems/largest-rectangle-in-histogram\n     // Given an array of integers heights representing the histogram's bar height \n     // where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n-    int largestRectangleArea(std::vector<int>& heights) { return 0; }\n+    int dailyTemperatures(std::vector<int>& heights) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719466315400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n {\n     // https://leetcode.com/problems/largest-rectangle-in-histogram\n     // Given an array of integers heights representing the histogram's bar height \n     // where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n-    int dailyTemperatures(std::vector<int>& heights) { return 0; }\n+    int dailyTemperatures(std::vector<int> heights) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719466320717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n {\n     // https://leetcode.com/problems/largest-rectangle-in-histogram\n     // Given an array of integers heights representing the histogram's bar height \n     // where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n-    std::vector<int> dailyTemperatures(std::vector<int> heights) { return 0; }\n+    std::vector<int> dailyTemperatures(std::vector<int> heights) { return {}; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719466327313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n #include <vector>\n \n namespace algorithms::leetcode::array\n {\n-    // https://leetcode.com/problems/largest-rectangle-in-histogram\n+    // https://leetcode.com/problems/daily-temperatures\n     // Given an array of integers heights representing the histogram's bar height \n     // where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n     std::vector<int> dailyTemperatures(std::vector<int> heights) { return {}; }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1719466293060,
            "name": "Commit-0",
            "content": "#include <vector>\n\nnamespace algorithms::leetcode::array\n{\n    // https://leetcode.com/problems/largest-rectangle-in-histogram\n    // Given an array of integers heights representing the histogram's bar height \n    // where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n    int largestRectangleArea(std::vector<int>& heights) { return 0; }\n}"
        }
    ]
}
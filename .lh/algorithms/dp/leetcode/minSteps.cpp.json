{
    "sourceFile": "algorithms/dp/leetcode/minSteps.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1719815958163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719815963351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,4 @@\n \n-int minSteps(int n)    \n-    }\n\\ No newline at end of file\n+int minSteps(int n) \n+{   \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719815972050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n \n \n-https://leetcode.com/problems/2-keys-keyboard/\n+// https://leetcode.com/problems/2-keys-keyboard/\n int minSteps(int n) \n {   \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719995972367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+\n+\n+namespace algorithms::dp::leetcode\n+{\n+    // https://leetcode.com/problems/2-keys-keyboard\n+    // There is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:\n+    // Copy All: You can copy all the characters present on the screen (a partial copy is not allowed).\n+    // Paste: You can paste the characters which are copied last time.\n+    // Given an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.\n+    int minSteps(int n)\n+    {\n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1719815958163,
            "name": "Commit-0",
            "content": "\nint minSteps(int n)    \n    }"
        }
    ]
}
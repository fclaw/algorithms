{
    "sourceFile": "algorithms/swapPairs.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1718010404933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718010411774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n- ListNode* swapPairs(ListNode* head) {\n\\ No newline at end of file\n+ ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718010434115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n+ \n+ \n  ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718010440853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n  \n- \n- ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n+// https://leetcode.com/problems/swap-nodes-in-pairs \n+ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718010458248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,4 @@\n- \n+#include \"list.cpp\"\n+\n // https://leetcode.com/problems/swap-nodes-in-pairs \n ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718010477997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n #include \"list.cpp\"\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n+// Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718010484172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n #include \"list.cpp\"\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n-// Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n+// Given a linked list, swap every two adjacent nodes and return its head. \n+// You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026667504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,8 @@\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n-ListNode* swapPairs(ListNode* head) { return head; }\n\\ No newline at end of file\n+ListNode* swapPairs(ListNode* head) \n+{\n+    if()\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026680918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swapPairs(ListNode* head) \n {\n-    if()\n+    if(head == nullptr || head->next)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026686884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swapPairs(ListNode* head) \n {\n-    if(head == nullptr || head->next)\n+    if(head == nullptr || head->next == null)\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026697193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,9 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swapPairs(ListNode* head) \n {\n-    if(head == nullptr || head->next == null)\n+    if(head == nullptr || \n+       head->next == nullptr)\n+       return head;\n+       \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026703666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,6 +7,7 @@\n {\n     if(head == nullptr || \n        head->next == nullptr)\n        return head;\n+    \n        \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026745918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,14 @@\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n+\n+\n ListNode* swapPairs(ListNode* head) \n {\n     if(head == nullptr || \n        head->next == nullptr)\n        return head;\n-    \n-       \n+\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718026751449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n+ListNode* \n \n-\n ListNode* swapPairs(ListNode* head) \n {\n     if(head == nullptr || \n        head->next == nullptr)\n"
                },
                {
                    "date": 1718026765157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,12 @@\n \n // https://leetcode.com/problems/swap-nodes-in-pairs \n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n-ListNode* \n+ListNode* swap(ListNode* ptr)\n+{\n+    \n+}\n \n ListNode* swapPairs(ListNode* head) \n {\n     if(head == nullptr || \n"
                },
                {
                    "date": 1718026816499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n-    \n+    auto tail \n }\n \n ListNode* swapPairs(ListNode* head) \n {\n"
                },
                {
                    "date": 1718026822552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n-    auto tail \n+    \n+    auto tail = \n }\n \n ListNode* swapPairs(ListNode* head) \n {\n"
                },
                {
                    "date": 1718026834202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n-    \n+    auto next = ptr->next;\n     auto tail = \n }\n \n ListNode* swapPairs(ListNode* head) \n"
                },
                {
                    "date": 1718026839513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n     auto next = ptr->next;\n-    auto tail = \n+    auto tail = next->ptr;\n+    \n }\n \n ListNode* swapPairs(ListNode* head) \n {\n"
                },
                {
                    "date": 1718026861593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n     auto next = ptr->next;\n-    auto tail = next->ptr;\n-    \n+    auto tail = next->;\n+\n }\n \n ListNode* swapPairs(ListNode* head) \n {\n"
                },
                {
                    "date": 1718026895674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // Given a linked list, swap every two adjacent nodes and return its head. \n // You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n ListNode* swap(ListNode* ptr)\n {\n-    auto next = ptr->next;\n+    auto a = ptr->next;\n     auto tail = next->next;\n \n }\n \n"
                },
                {
                    "date": 1718026983254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     ptr->next = tail;\n     return tail;\n }\n \n-ListNode* swap()\n+ListNode* swap(L)\n \n ListNode* swapPairs(ListNode* head) \n {\n     if(head == nullptr || \n"
                }
            ],
            "date": 1718010404933,
            "name": "Commit-0",
            "content": " ListNode* swapPairs(ListNode* head) {"
        }
    ]
}
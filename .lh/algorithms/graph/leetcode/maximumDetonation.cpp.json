{
    "sourceFile": "algorithms/graph/leetcode/maximumDetonation.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1723180593337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723180601909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n #include <vector>\n \n namespace algorithms::graph::leetcode\n {\n-    // https://leetcode.com/problems/number-of-provinces\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /*\n        There are n cities. Some of them are connected, while some are not. \n        If city a is connected directly with city b, \n        and city b is connected directly with city c, \n"
                },
                {
                    "date": 1723180613069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,9 @@\n \n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /*\n-       There are n cities. Some of them are connected, while some are not. \n-       If city a is connected directly with city b, \n-       and city b is connected directly with city c, \n-       then city a is connected indirectly with city c.\n-        A province is a group of directly or indirectly \n-        connected cities and no other cities outside of the group\n+    /** */\n     */\n     int findCircleNum(std::vector<std::vector<int>> isConnected)\n     {\n         return 0;\n"
                },
                {
                    "date": 1723180623015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,17 @@\n \n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /** */\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+\n+The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, whereas ri denotes the radius of its range.\n+\n+You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n+\n+Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n     */\n     int findCircleNum(std::vector<std::vector<int>> isConnected)\n     {\n         return 0;\n"
                },
                {
                    "date": 1723180629299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,10 @@\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /**\n      * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n      * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, whereas ri denotes the radius of its range.\n \n-The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, whereas ri denotes the radius of its range.\n-\n You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n \n Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n     */\n"
                },
                {
                    "date": 1723180636622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /**\n      * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n      * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, whereas ri denotes the radius of its range.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n \n You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n \n Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n"
                },
                {
                    "date": 1723180643594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,10 @@\n      * This area is in the shape of a circle with the center as the location of the bomb.\n      * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n      * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n      * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n \n-You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n-\n Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n     */\n     int findCircleNum(std::vector<std::vector<int>> isConnected)\n     {\n"
                },
                {
                    "date": 1723180650285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,11 @@\n      * This area is in the shape of a circle with the center as the location of the bomb.\n      * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n      * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n      * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n \n Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n     */\n     int findCircleNum(std::vector<std::vector<int>> isConnected)\n"
                },
                {
                    "date": 1723180658841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n      * whereas ri denotes the radius of its range.\n      * You may choose to detonate a single bomb. When a bomb is detonated, \n      * it will detonate all bombs that lie in its range. \n      * These bombs will further detonate the bombs that lie in their ranges.\n-\n-Given the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n     */\n     int findCircleNum(std::vector<std::vector<int>> isConnected)\n     {\n         return 0;\n"
                },
                {
                    "date": 1723180671502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n      * These bombs will further detonate the bombs that lie in their ranges.\n      * Given the list of bombs, return the maximum number of bombs that can be detonated \n      * if you are allowed to detonate only one bomb.\n     */\n-    int findCircleNum(std::vector<std::vector<int>> isConnected)\n-    {\n-        return 0;\n+    int maximumDetonation(vector<vector<int>>& bombs) {\n+        \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723180678336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,8 @@\n      * These bombs will further detonate the bombs that lie in their ranges.\n      * Given the list of bombs, return the maximum number of bombs that can be detonated \n      * if you are allowed to detonate only one bomb.\n     */\n-    int maximumDetonation(vector<vector<int>>& bombs) {\n+    int maximumDetonation(std::vector<std::vector<int>>& bombs) {\n         \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723180684981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+#include <vector>\n+\n+\n+\n+namespace algorithms::graph::leetcode\n+{\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n+    */\n+    int maximumDetonation(std::vector<std::vector<int>>& bombs) {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723180751933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,8 @@\n #include <vector>\n \n \n \n-namespace algorithms::graph::leetcode\n-{\n-    // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /**\n-     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n-     * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n-     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n-     * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, \n-     * it will detonate all bombs that lie in its range. \n-     * These bombs will further detonate the bombs that lie in their ranges.\n-     * Given the list of bombs, return the maximum number of bombs that can be detonated \n-     * if you are allowed to detonate only one bomb.\n-    */\n-    int maximumDetonation(std::vector<std::vector<int>>& bombs) {\n-        \n-    }\n-}\n-#include <vector>\n \n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n"
                },
                {
                    "date": 1723180757797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n #include <vector>\n \n+using \n \n \n-\n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /**\n"
                },
                {
                    "date": 1723180764236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include <vector>\n \n-using \n+using bomb\n \n \n namespace algorithms::graph::leetcode\n {\n"
                },
                {
                    "date": 1723180769550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,7 @@\n #include <vector>\n \n-using bomb\n \n-\n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /**\n"
                },
                {
                    "date": 1723180776225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n #include <vector>\n \n+using bomb = \n \n+\n namespace algorithms::graph::leetcode\n {\n     // https://leetcode.com/problems/detonate-the-maximum-bombs\n     /**\n"
                },
                {
                    "date": 1723180785312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include <vector>\n \n-using bomb = \n+using bomb = std::vector<int>\n \n \n namespace algorithms::graph::leetcode\n {\n"
                },
                {
                    "date": 1723180796246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+#include <vector>\n+\n+using bomb = std::vector<int>;\n+\n+namespace algorithms::graph::leetcode\n+{\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n+    */\n+    int maximumDetonation(std::vector<bomb>& bombs) {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723180804308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+#include <vector>\n+\n+using bomb = std::vector<int>;\n+\n+namespace algorithms::graph::leetcode\n+{\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n+    */\n+    int maximumDetonation(std::vector<bomb>& bombs) \n+    {\n+        re    \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723180850015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+#include <vector>\n+\n+using bomb = std::vector<int>;\n+\n+namespace algorithms::graph::leetcode\n+{\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n+    */\n+    int maximumDetonation(std::vector<bomb>& bombs) \n+    {\n+        return 1;    \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723211395829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,80 +16,11 @@\n      * These bombs will further detonate the bombs that lie in their ranges.\n      * Given the list of bombs, return the maximum number of bombs that can be detonated \n      * if you are allowed to detonate only one bomb.\n     */\n+    std::vector<std::pair<int, int>> dirs = \n+    { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n     int maximumDetonation(std::vector<bomb>& bombs) \n     {\n         return 1;    \n     }\n-}\n-#include <vector>\n-\n-using bomb = std::vector<int>;\n-\n-namespace algorithms::graph::leetcode\n-{\n-    // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /**\n-     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n-     * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n-     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n-     * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, \n-     * it will detonate all bombs that lie in its range. \n-     * These bombs will further detonate the bombs that lie in their ranges.\n-     * Given the list of bombs, return the maximum number of bombs that can be detonated \n-     * if you are allowed to detonate only one bomb.\n-    */\n-    int maximumDetonation(std::vector<bomb>& bombs) \n-    {\n-        re    \n-    }\n-}\n-#include <vector>\n-\n-using bomb = std::vector<int>;\n-\n-namespace algorithms::graph::leetcode\n-{\n-    // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /**\n-     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n-     * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n-     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n-     * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, \n-     * it will detonate all bombs that lie in its range. \n-     * These bombs will further detonate the bombs that lie in their ranges.\n-     * Given the list of bombs, return the maximum number of bombs that can be detonated \n-     * if you are allowed to detonate only one bomb.\n-    */\n-    int maximumDetonation(std::vector<bomb>& bombs) {\n-        \n-    }\n-}\n-#include <vector>\n-\n-using bomb = std::vector<int>\n-\n-\n-namespace algorithms::graph::leetcode\n-{\n-    // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /**\n-     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n-     * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n-     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n-     * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, \n-     * it will detonate all bombs that lie in its range. \n-     * These bombs will further detonate the bombs that lie in their ranges.\n-     * Given the list of bombs, return the maximum number of bombs that can be detonated \n-     * if you are allowed to detonate only one bomb.\n-    */\n-    int maximumDetonation(std::vector<std::vector<int>>& bombs) {\n-        \n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723211446967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,12 @@\n      * These bombs will further detonate the bombs that lie in their ranges.\n      * Given the list of bombs, return the maximum number of bombs that can be detonated \n      * if you are allowed to detonate only one bomb.\n     */\n+    int m;\n+    int n;\n     std::vector<std::pair<int, int>> dirs = \n-    { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n+      { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n     int maximumDetonation(std::vector<bomb>& bombs) \n     {\n         return 1;    \n     }\n"
                },
                {
                    "date": 1723211454414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+#include <vector>\n+\n+using bomb = std::vector<int>;\n+\n+namespace algorithms::graph::leetcode\n+{\n+    // https://leetcode.com/problems/detonate-the-maximum-bombs\n+    /**\n+     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n+     * This area is in the shape of a circle with the center as the location of the bomb.\n+     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n+     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n+     * whereas ri denotes the radius of its range.\n+     * You may choose to detonate a single bomb. When a bomb is detonated, \n+     * it will detonate all bombs that lie in its range. \n+     * These bombs will further detonate the bombs that lie in their ranges.\n+     * Given the list of bombs, return the maximum number of bombs that can be detonated \n+     * if you are allowed to detonate only one bomb.\n+    */\n+    std::vector<std::pair<int, int>> dirs = \n+      { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n+    int maximumDetonation(std::vector<bomb>& bombs) \n+    {\n+        return 1;    \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723313704387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,39 +16,9 @@\n      * These bombs will further detonate the bombs that lie in their ranges.\n      * Given the list of bombs, return the maximum number of bombs that can be detonated \n      * if you are allowed to detonate only one bomb.\n     */\n-    std::vector<std::pair<int, int>> dirs = \n-      { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n-    int maximumDetonation(std::vector<bomb>& bombs) \n+    int maximumDetonation(std::vector<bomb>& bombs)\n     {\n         return 1;    \n     }\n-}\n-#include <vector>\n-\n-using bomb = std::vector<int>;\n-\n-namespace algorithms::graph::leetcode\n-{\n-    // https://leetcode.com/problems/detonate-the-maximum-bombs\n-    /**\n-     * You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. \n-     * This area is in the shape of a circle with the center as the location of the bomb.\n-     * The bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. \n-     * xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, \n-     * whereas ri denotes the radius of its range.\n-     * You may choose to detonate a single bomb. When a bomb is detonated, \n-     * it will detonate all bombs that lie in its range. \n-     * These bombs will further detonate the bombs that lie in their ranges.\n-     * Given the list of bombs, return the maximum number of bombs that can be detonated \n-     * if you are allowed to detonate only one bomb.\n-    */\n-    int m;\n-    int n;\n-    std::vector<std::pair<int, int>> dirs = \n-      { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };\n-    int maximumDetonation(std::vector<bomb>& bombs) \n-    {\n-        return 1;    \n-    }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1723180593337,
            "name": "Commit-0",
            "content": "#include <vector>\n\nnamespace algorithms::graph::leetcode\n{\n    // https://leetcode.com/problems/number-of-provinces\n    /*\n       There are n cities. Some of them are connected, while some are not. \n       If city a is connected directly with city b, \n       and city b is connected directly with city c, \n       then city a is connected indirectly with city c.\n        A province is a group of directly or indirectly \n        connected cities and no other cities outside of the group\n    */\n    int findCircleNum(std::vector<std::vector<int>> isConnected)\n    {\n        return 0;\n    }\n}"
        }
    ]
}
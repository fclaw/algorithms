{
    "sourceFile": "algorithms/longestPalindromeSubseq.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1718544263636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718544273454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,7 @@\n \n using DP = std::vector<std::vector<int>>;\n \n namespace leetcode::dp\n-{\n\\ No newline at end of file\n+{\n+    int longestPalindromeSubseq(string s) {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544278483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,6 +5,6 @@\n using DP = std::vector<std::vector<int>>;\n \n namespace leetcode::dp\n {\n-    int longestPalindromeSubseq(string s) {\n+    int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544308471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,6 +5,7 @@\n using DP = std::vector<std::vector<int>>;\n \n namespace leetcode::dp\n {\n+    // https://leetcode.com/problems/longest-palindromic-subsequence\n     int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544315751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,6 +6,9 @@\n \n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/longest-palindromic-subsequence\n+    // Given a string s, find the longest palindromic subsequence's length in s.\n+\n+A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n     int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544323342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,7 @@\n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/longest-palindromic-subsequence\n     // Given a string s, find the longest palindromic subsequence's length in s.\n-\n-A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n+    // A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n     int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544329729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,7 +7,7 @@\n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/longest-palindromic-subsequence\n     // Given a string s, find the longest palindromic subsequence's length in s.\n-    // A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n+    // subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n     int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718544335367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,7 +7,8 @@\n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/longest-palindromic-subsequence\n     // Given a string s, find the longest palindromic subsequence's length in s.\n-    // subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n+    // subsequence is a sequence that can be derived from another sequence \n+    by deleting some or no elements without changing the order of the remaining elements.\n     int longestPalindromeSubseq(std::string s) {}\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1718544263636,
            "name": "Commit-0",
            "content": "#include <string>\n#include <vector>\n#include <iostream>\n\nusing DP = std::vector<std::vector<int>>;\n\nnamespace leetcode::dp\n{"
        }
    ]
}
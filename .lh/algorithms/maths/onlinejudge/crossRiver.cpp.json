{
    "sourceFile": "algorithms/maths/onlinejudge/crossRiver.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1728471245128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728471337201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n-        \n \n+        int tc, c;\n+        while()\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471346266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,8 @@\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n \n         int tc, c;\n+        std::cin >> tc;\n         while()\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471352307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,10 @@\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n \n         int tc, c;\n         std::cin >> tc;\n-        while()\n+        while(--tc >= 0)\n+        {\n+            \n+        }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471358387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,8 @@\n         int tc, c;\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n-            \n+            int \n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471364530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,8 @@\n         int tc, c;\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n-            int \n+            int width, flow, \n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471372889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n         int tc, c;\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n-            int width, flow, \n+            int width, flow, boat;\n+            std::cin >> widf\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471386167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n-            std::cin >> widf\n+            std::cin >> width >> flow >> boat\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471395720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n-            std::cin >> width >> flow >> boat\n+            std::cin >> width >> flow >> boat;\n+            diffOf2Ways()\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471401756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,8 @@\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n-            diffOf2Ways()\n+            diffOf2Ways(width, flow, )\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471411579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,8 @@\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n-            diffOf2Ways(width, flow, )\n+            int diffOf2Ways(width, flow, boat);\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471429333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,8 @@\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n-            int diffOf2Ways(width, flow, boat);\n+            int ans = diffOf2Ways(width, flow, boat);\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471434738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,7 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n+            printf(\"\")\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471440338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"\")\n+            printf(\"Case %d \")\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471451063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d \")\n+            printf(\"Case %d %s\", )\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471456603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,15 +20,15 @@\n     void submit(std::optional<char*> file)\n     {\n         if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n \n-        int tc, c;\n+        int tc, c = 0;\n         std::cin >> tc;\n         while(--tc >= 0)\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d %s\", )\n+            printf(\"Case %d %s\\n\", )\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471464126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d %s\\n\", )\n+            printf(\"Case %d %s\\n\", ++c, std::)\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471472850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d %s\\n\", ++c, std::)\n+            printf(\"Case %d %s\\n\", ++c, std::to_string(ans).)\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471479326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d %s\\n\", ++c, std::to_string(ans).)\n+            printf(\"Case %d %s\\n\", ++c, std::to_string(ans).c_str());\n         }\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728471487557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n #include <cassert>\n #include <optional>\n #include <iostream>\n+#include <cs\n \n \n-\n namespace algorithms::maths::onlinejudge::cross_river\n {\n     /** https://onlinejudge.org/external/107/10773.pdf, several tricky cases \n      * You are trying to cross a river of width d meters. You are given that, the river flows at v m/s and\n"
                },
                {
                    "date": 1728471559187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n         {\n             int width, flow, boat;\n             std::cin >> width >> flow >> boat;\n             int ans = diffOf2Ways(width, flow, boat);\n-            printf(\"Case %d %s\\n\", ++c, std::to_string(ans).c_str());\n+            printf(\"Case %d: %s\\n\", ++c, std::to_string(ans).c_str());\n         }\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1728471245128,
            "name": "Commit-0",
            "content": "#include <cassert>\n#include <optional>\n#include <iostream>\n\n\n\nnamespace algorithms::maths::onlinejudge::cross_river\n{\n    /** https://onlinejudge.org/external/107/10773.pdf, several tricky cases \n     * You are trying to cross a river of width d meters. You are given that, the river flows at v m/s and\n     * you know that you can speed up the boat in u m/s. There may be two goals how to cross the river:\n     * One goal (called fastest path) is to cross it in fastest time, and it does not matter how far the flow of\n     * the river takes the boat. The other goal (called shortest path) is to steer the boat in a direction so that\n     * the flow of the river doesn’t take the boat away, and the boat passes the river in a line perpendicular to\n     * the boarder of the river. Is it always possible to have two different paths, one to pass at shortest time\n     * and the other at shortest path? If possible then, what is the difference (Let P s) between the times\n     * needed to cross the river in the different ways? */\n    int diffOf2Ways(int width, int river_flow, int boat_speed) { return 1; }\n\n    void submit(std::optional<char*> file)\n    {\n        if(file.has_value()) assert(std::freopen(file.value(), \"r\", stdin) != nullptr);\n        \n\n    }\n}"
        }
    ]
}
{
    "sourceFile": "algorithms/maxProfit.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1718390261826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718390271634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n #include <vector>\n \n \n namespace leetcode::dp\n-{\n\\ No newline at end of file\n+{\n+    // https://leetcode.com/problems/best-time-to-buy-and-sell-stock\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390280489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,12 @@\n \n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/best-time-to-buy-and-sell-stock\n-    \n+    /*\n+    You are given an array prices where prices[i] is the price of a given stock on the ith day.\n+\n+You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\n+\n+Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n+    */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390288539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,9 @@\n namespace leetcode::dp\n {\n     // https://leetcode.com/problems/best-time-to-buy-and-sell-stock\n     /*\n-    You are given an array prices where prices[i] is the price of a given stock on the ith day.\n-\n-You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\n-\n+      You are given an array prices where prices[i] is the price of a given stock on the ith day.\n+      You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\n Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n     */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390296616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n {\n     // https://leetcode.com/problems/best-time-to-buy-and-sell-stock\n     /*\n       You are given an array prices where prices[i] is the price of a given stock on the ith day.\n-      You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\n-Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n+      You want to maximize your profit by choosing a single day to buy one stock and \n+      choosing a different day in the future to sell that stock.\n+      Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n     */\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390304663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,6 @@\n       You want to maximize your profit by choosing a single day to buy one stock and \n       choosing a different day in the future to sell that stock.\n       Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n     */\n+   int maxProfit(vector<int>& prices) {\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390315596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,6 +9,6 @@\n       You want to maximize your profit by choosing a single day to buy one stock and \n       choosing a different day in the future to sell that stock.\n       Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n     */\n-   int maxProfit(vector<int>& prices) {\n+   int maxProfit(vector<int>& prices) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390376058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,7 +8,11 @@\n       You are given an array prices where prices[i] is the price of a given stock on the ith day.\n       You want to maximize your profit by choosing a single day to buy one stock and \n       choosing a different day in the future to sell that stock.\n       Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n+      Input: prices = [7,1,5,3,6,4]\n+Output: 5\n+Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n+Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.\n     */\n    int maxProfit(std::vector<int>& prices) { return 0; }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718390675867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,7 +13,7 @@\n       Output: 5\n       Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n       Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.\n     */\n-   void maxProfitDp()\n+   void maxProfitDp(std::vector<int>& prices, int day, i)\n    int maxProfit(std::vector<int>& prices) { return 0; }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1718390261826,
            "name": "Commit-0",
            "content": "#include <vector>\n\n\nnamespace leetcode::dp\n{"
        }
    ]
}
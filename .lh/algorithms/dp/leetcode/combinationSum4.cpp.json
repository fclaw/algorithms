{
    "sourceFile": "algorithms/dp/leetcode/combinationSum4.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1721635493602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721635503315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n namespace  algorithms::dp::leetcode\n {\n+    // https://leetcode.com/problems/combination-sum-iv\n     \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635516816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n-    \n+    int combinationSum4(vector<int>& nums, int target) \n+    {\n+           \n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635523129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n-    int combinationSum4(vector<int>& nums, int target) \n+    int combinationSum4(std::vector<int>& nums, int target) \n     {\n-           \n+        return 1;   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635528959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+\n+\n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n"
                },
                {
                    "date": 1721635534951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n+#include\n \n-\n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n"
                },
                {
                    "date": 1721635540834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include\n+#include <\n \n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n"
                },
                {
                    "date": 1721635551507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-#include <\n+#include <vector>\n \n namespace  algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n-        return 1;   \n+           \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635592180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,8 @@\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n+        int sum = 0;\n            \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635598189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,7 @@\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n         int sum = 0;\n-           \n+        for(auto )   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635606364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,8 @@\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n         int sum = 0;\n-        for(auto )   \n+        for(auto n : nums)\n+          sum +=    \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635612421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,7 +6,7 @@\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n         int sum = 0;\n         for(auto n : nums)\n-          sum +=    \n+          sum += combinationSum4() \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635620742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,7 +6,8 @@\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n         int sum = 0;\n         for(auto n : nums)\n-          sum += combinationSum4() \n+          sum += combinationSum4(nums, target - n);\n+           \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635625922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,7 +7,7 @@\n     {\n         int sum = 0;\n         for(auto n : nums)\n           sum += combinationSum4(nums, target - n);\n-           \n+        return sum;   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635635958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n+        if(tar)\n+\n         int sum = 0;\n         for(auto n : nums)\n           sum += combinationSum4(nums, target - n);\n         return sum;   \n"
                },
                {
                    "date": 1721635643286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n-        if(tar)\n+        if(target == 0)\n+          return 1;\n \n         int sum = 0;\n         for(auto n : nums)\n           sum += combinationSum4(nums, target - n);\n"
                },
                {
                    "date": 1721635650570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n           return 1;\n \n         int sum = 0;\n         for(auto n : nums)\n+          if()\n           sum += combinationSum4(nums, target - n);\n         return sum;   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635657366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n           return 1;\n \n         int sum = 0;\n         for(auto n : nums)\n-          if()\n+          if(target - n > 0)\n           sum += combinationSum4(nums, target - n);\n         return sum;   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635729468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include <vector>\n \n-namespace  algorithms::dp::leetcode\n+namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int>& nums, int target) \n     {\n@@ -10,8 +10,8 @@\n \n         int sum = 0;\n         for(auto n : nums)\n           if(target - n > 0)\n-          sum += combinationSum4(nums, target - n);\n+            sum += combinationSum4(nums, target - n);\n         return sum;   \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635778174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n-    int combinationSum4(std::vector<int>& nums, int target) \n+    int combinationSum4(std::vector<int> nums, int target) \n     {\n         if(target == 0)\n           return 1;\n \n"
                },
                {
                    "date": 1721635807510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,7 @@\n         int sum = 0;\n         for(auto n : nums)\n           if(target - n > 0)\n             sum += combinationSum4(nums, target - n);\n-        return sum;   \n+        return sum; \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1721635852912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n #include <vector>\n+#include <\n \n namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n"
                },
                {
                    "date": 1721635858266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n #include <vector>\n-#include <\n+#include <iostream>\n \n namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/combination-sum-iv\n"
                },
                {
                    "date": 1721635872165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,11 @@\n {\n     // https://leetcode.com/problems/combination-sum-iv\n     int combinationSum4(std::vector<int> nums, int target) \n     {\n+\n+        std::cout << target << std::end\n+\n         if(target == 0)\n           return 1;\n \n         int sum = 0;\n"
                },
                {
                    "date": 1721635889765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     {\n \n         std::cout << target << std::endl;\n \n-        if(target == 0)\n+        if(target == 0j)\n           return 1;\n \n         int sum = 0;\n         for(auto n : nums)\n"
                },
                {
                    "date": 1721636153244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+#include <vector>\n+#include <iostream>\n+\n+namespace algorithms::dp::leetcode\n+{\n+    // https://leetcode.com/problems/combination-sum-iv\n+    int combinationSum4(std::vector<int> nums, int target, std::vector<int>& memo) \n+    {\n+        if(target == 0)\n+          return 1;\n+\n+        int sum = 0;\n+        for(auto n : nums)\n+          if(target - n >= 0)\n+            sum += combinationSum4(nums, target - n);\n+        return sum; \n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1721635493602,
            "name": "Commit-0",
            "content": "namespace  algorithms::dp::leetcode\n{\n    \n}"
        }
    ]
}
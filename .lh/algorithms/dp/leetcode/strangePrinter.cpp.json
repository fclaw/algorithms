{
    "sourceFile": "algorithms/dp/leetcode/strangePrinter.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1722272464677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722272477245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,17 @@\n+#include <vector>\n \n-\n\\ No newline at end of file\n-name\n+namespace algorithms::dp::leetcode\n+{\n+    // https://leetcode.com/problems/remove-boxes\n+    /*\n+       You are given several boxes with different colors represented by different positive numbers.\n+       You may experience several rounds to remove boxes until there is no box left. \n+       Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), \n+       remove them and get k * k points.\n+       Return the maximum points you can get.\n+    */\n+    int removeBoxes(std::vector<int> boxes)\n+    {\n+        return 1;\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722272485970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include <vector>\n+#include <string>\n \n namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/remove-boxes\n"
                },
                {
                    "date": 1722272494868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n        Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), \n        remove them and get k * k points.\n        Return the maximum points you can get.\n     */\n-    int removeBoxes(std::vector<int> boxes)\n-    {\n+    int strangePrinter(std::string s) {\n         return 1;\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722272504498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,17 @@\n #include <string>\n \n namespace algorithms::dp::leetcode\n {\n-    // https://leetcode.com/problems/remove-boxes\n+    //\n     /*\n        You are given several boxes with different colors represented by different positive numbers.\n        You may experience several rounds to remove boxes until there is no box left. \n        Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), \n        remove them and get k * k points.\n        Return the maximum points you can get.\n     */\n-    int strangePrinter(std::string s) {\n+    int strangePrinter(std::string s) \n+    {\n         return 1;\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722272514774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,13 @@\n namespace algorithms::dp::leetcode\n {\n     // https://leetcode.com/problems/strange-printer\n     /*\n-       You are given several boxes with different colors represented by different positive numbers.\n-       You may experience several rounds to remove boxes until there is no box left. \n-       Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), \n-       remove them and get k * k points.\n-       Return the maximum points you can get.\n+      There is a strange printer with the following two special properties:\n+\n+The printer can only print a sequence of the same character each time.\n+At each turn, the printer can print new characters starting from and ending at any place and will cover the original existing characters.\n+Given a string s, return the minimum number of turns the printer needed to print it.\n     */\n     int strangePrinter(std::string s) \n     {\n         return 1;\n"
                },
                {
                    "date": 1722272525409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+#include <string>\n+\n+namespace algorithms::dp::leetcode\n+{\n+    // https://leetcode.com/problems/strange-printer\n+    /*\n+      There is a strange printer with the following two special properties:\n+      The printer can only print a sequence of the same character each time.\n+      At each turn, the printer can print new characters starting from and ending at any place and will cover the original existing characters.\n+Given a string s, return the minimum number of turns the printer needed to print it.\n+    */\n+    int strangePrinter(std::string s) \n+    {\n+        return 1;\n+    }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1722272464677,
            "name": "Commit-0",
            "content": "\n\nname"
        }
    ]
}